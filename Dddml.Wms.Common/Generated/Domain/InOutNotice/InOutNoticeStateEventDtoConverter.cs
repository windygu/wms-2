// <autogenerated>
//   This file was generated by T4 code generator GenerateInOutNoticeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InOutNotice;

namespace Dddml.Wms.Domain.InOutNotice
{

    public class InOutNoticeStateEventDtoConverter
    {
        public virtual InOutNoticeStateCreatedOrMergePatchedOrDeletedDto ToInOutNoticeStateEventDto(IInOutNoticeEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IInOutNoticeStateCreated)stateEvent;
                return ToInOutNoticeStateCreatedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.MergePatched)
            {
                var e = (IInOutNoticeStateMergePatched)stateEvent;
                return ToInOutNoticeStateMergePatchedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.Deleted)
            {
                var e = (IInOutNoticeStateDeleted)stateEvent;
                return ToInOutNoticeStateDeletedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual InOutNoticeStateCreatedDto ToInOutNoticeStateCreatedDto(IInOutNoticeStateCreated e)
        {
            var dto = new InOutNoticeStateCreatedDto();
            dto.InOutNoticeEventId = e.InOutNoticeEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.WarehouseId = e.WarehouseId;
            dto.InOutNoticeType = e.InOutNoticeType;
            dto.TelecomContactMechId = e.TelecomContactMechId;
            dto.TrackingNumber = e.TrackingNumber;
            dto.ContactPartyId = e.ContactPartyId;
            dto.VehiclePlateNumber = e.VehiclePlateNumber;
            dto.ShippingInstructions = e.ShippingInstructions;
            dto.EstimatedShipDate = e.EstimatedShipDate;
            dto.EstimatedDeliveryDate = e.EstimatedDeliveryDate;
            dto.IsScheduleNeeded = e.IsScheduleNeeded;
            dto.StatusId = e.StatusId;
            dto.Active = e.Active;
            return dto;
        }

        public virtual InOutNoticeStateMergePatchedDto ToInOutNoticeStateMergePatchedDto(IInOutNoticeStateMergePatched e)
        {
            var dto = new InOutNoticeStateMergePatchedDto();
            dto.InOutNoticeEventId = e.InOutNoticeEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;
            dto.WarehouseId = e.WarehouseId;
            dto.InOutNoticeType = e.InOutNoticeType;
            dto.TelecomContactMechId = e.TelecomContactMechId;
            dto.TrackingNumber = e.TrackingNumber;
            dto.ContactPartyId = e.ContactPartyId;
            dto.VehiclePlateNumber = e.VehiclePlateNumber;
            dto.ShippingInstructions = e.ShippingInstructions;
            dto.EstimatedShipDate = e.EstimatedShipDate;
            dto.EstimatedDeliveryDate = e.EstimatedDeliveryDate;
            dto.IsScheduleNeeded = e.IsScheduleNeeded;
            dto.StatusId = e.StatusId;
            dto.Active = e.Active;
            dto.IsPropertyWarehouseIdRemoved = e.IsPropertyWarehouseIdRemoved;
            dto.IsPropertyInOutNoticeTypeRemoved = e.IsPropertyInOutNoticeTypeRemoved;
            dto.IsPropertyTelecomContactMechIdRemoved = e.IsPropertyTelecomContactMechIdRemoved;
            dto.IsPropertyTrackingNumberRemoved = e.IsPropertyTrackingNumberRemoved;
            dto.IsPropertyContactPartyIdRemoved = e.IsPropertyContactPartyIdRemoved;
            dto.IsPropertyVehiclePlateNumberRemoved = e.IsPropertyVehiclePlateNumberRemoved;
            dto.IsPropertyShippingInstructionsRemoved = e.IsPropertyShippingInstructionsRemoved;
            dto.IsPropertyEstimatedShipDateRemoved = e.IsPropertyEstimatedShipDateRemoved;
            dto.IsPropertyEstimatedDeliveryDateRemoved = e.IsPropertyEstimatedDeliveryDateRemoved;
            dto.IsPropertyIsScheduleNeededRemoved = e.IsPropertyIsScheduleNeededRemoved;
            dto.IsPropertyStatusIdRemoved = e.IsPropertyStatusIdRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual InOutNoticeStateDeletedDto ToInOutNoticeStateDeletedDto(IInOutNoticeStateDeleted e)
        {
            var dto = new InOutNoticeStateDeletedDto();
            dto.InOutNoticeEventId = e.InOutNoticeEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

