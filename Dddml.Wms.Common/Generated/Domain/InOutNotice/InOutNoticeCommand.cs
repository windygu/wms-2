// <autogenerated>
//   This file was generated by T4 code generator GenerateInOutNoticeDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.InOutNotice;

namespace Dddml.Wms.Domain.InOutNotice
{

	public abstract class InOutNoticeCommandBase : IInOutNoticeCommand
	{
		public virtual string InOutNoticeId { get; set; }


		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return this.InOutNoticeId;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string WarehouseId { get; set; }

		public virtual string InOutNoticeType { get; set; }

		public virtual string TelecomContactMechId { get; set; }

		public virtual string TrackingNumber { get; set; }

		public virtual string ContactPartyId { get; set; }

		public virtual string VehiclePlateNumber { get; set; }

		public virtual string ShippingInstructions { get; set; }

		public virtual DateTime? EstimatedShipDate { get; set; }

		public virtual DateTime? EstimatedDeliveryDate { get; set; }

		public virtual bool? IsScheduleNeeded { get; set; }

		public virtual bool? Active { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreateInOutNotice : InOutNoticeCommandBase, ICreateInOutNotice
	{
		
		public CreateInOutNotice ()
		{
		}


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchInOutNotice :InOutNoticeCommandBase, IMergePatchInOutNotice
	{

		public virtual bool IsPropertyWarehouseIdRemoved { get; set; }

		public virtual bool IsPropertyInOutNoticeTypeRemoved { get; set; }

		public virtual bool IsPropertyTelecomContactMechIdRemoved { get; set; }

		public virtual bool IsPropertyTrackingNumberRemoved { get; set; }

		public virtual bool IsPropertyContactPartyIdRemoved { get; set; }

		public virtual bool IsPropertyVehiclePlateNumberRemoved { get; set; }

		public virtual bool IsPropertyShippingInstructionsRemoved { get; set; }

		public virtual bool IsPropertyEstimatedShipDateRemoved { get; set; }

		public virtual bool IsPropertyEstimatedDeliveryDateRemoved { get; set; }

		public virtual bool IsPropertyIsScheduleNeededRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchInOutNotice ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeleteInOutNotice : InOutNoticeCommandBase, IDeleteInOutNotice
	{
		public DeleteInOutNotice ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }

	}

    public static partial class InOutNoticeCommands
    {
        public class InOutNoticeAction : IInOutNoticeCommand
        {

            public string CommandType
            {
                get { return "InOutNoticeAction"; }
            }

            public string Value { get; set; }

            public string InOutNoticeId { get; set; }

            public long Version { get; set; }

            public string CommandId { get; set; }

            public string RequesterId { get; set; }


            string ICommand.CommandId
            {
                get
                {
                    return this.CommandId;
                }
                set
                {
                    this.CommandId = value;
                }
            }

            object ICommand.RequesterId
            {
                get { return this.RequesterId; }
                set { this.RequesterId = (string)value; }
            }

            string ICommandDto.CommandType
            {
                get { return this.CommandType; }
            }

            string IAggregateCommand<string, long>.AggregateId
            {
                get { return this.InOutNoticeId; }
            }

            string IInOutNoticeCommand.InOutNoticeId
            {
                get { return this.InOutNoticeId; }
                set { this.InOutNoticeId = value; }
            }

            long IAggregateCommand<string, long>.AggregateVersion
            {
                get { return this.Version; }
            }

            long IInOutNoticeCommand.Version
            {
                get
                {
                    return this.Version;
                }
                set
                {
                    this.Version = value;
                }
            }

        }

    }

}
