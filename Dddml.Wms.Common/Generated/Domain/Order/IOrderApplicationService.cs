// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;
using Dddml.Support.Criterion;

namespace Dddml.Wms.Domain.Order
{

	public partial interface IOrderApplicationService : IApplicationService
	{
		void When(ICreateOrder c);

		void When(IMergePatchOrder c);

		void When(OrderCommands.OrderShipGroupAction c);

 		IOrderState Get(string orderId);

        IEnumerable<IOrderState> GetAll(int firstResult, int maxResults);

        IEnumerable<IOrderState> Get(IEnumerable<KeyValuePair<string, object>> filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IOrderState> Get(ICriterion filter, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        IEnumerable<IOrderState> GetByProperty(string propertyName, object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue);

        long GetCount(IEnumerable<KeyValuePair<string, object>> filter);

        long GetCount(ICriterion filter);

        IOrderEvent GetEvent(string orderId, long version);

        IOrderState GetHistoryState(string orderId, long version);

        IOrderRoleState GetOrderRole(string orderId, PartyRoleId partyRoleId);

        IEnumerable<IOrderRoleState> GetOrderRoles(string orderId);

        IOrderItemState GetOrderItem(string orderId, string orderItemSeqId);

        IEnumerable<IOrderItemState> GetOrderItems(string orderId);

        IOrderShipGroupState GetOrderShipGroup(string orderId, string shipGroupSeqId);

        IEnumerable<IOrderShipGroupState> GetOrderShipGroups(string orderId);

        IOrderItemShipGroupAssociationState GetOrderItemShipGroupAssociation(string orderId, string orderShipGroupShipGroupSeqId, string orderItemSeqId);

        IEnumerable<IOrderItemShipGroupAssociationState> GetOrderItemShipGroupAssociations(string orderId, string orderShipGroupShipGroupSeqId);


	}

    public static partial class OrderApplicationServiceExtension
    {
        public static IEnumerable<IOrderState> GetByProperty(this IOrderApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IOrderState, object>> propertySelector, 
            object propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IOrderState>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }

        public static IEnumerable<IOrderState> GetByProperty<TPropertyType>(this IOrderApplicationService applicationService,
            System.Linq.Expressions.Expression<Func<IOrderState, TPropertyType>> propertySelector,
            TPropertyType propertyValue, IList<string> orders = null, int firstResult = 0, int maxResults = int.MaxValue)
        {
            return applicationService.GetByProperty(ReflectUtils.GetPropertyName<IOrderState, TPropertyType>(propertySelector), propertyValue, orders, firstResult, maxResults);
        }
    }

}

