// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Order
{

	public static partial class OrderItemShipGroupAssociationStateInterfaceExtension
	{

        public static IOrderItemShipGroupAssociationCommand ToCreateOrMergePatchOrderItemShipGroupAssociation<TCreateOrderItemShipGroupAssociation, TMergePatchOrderItemShipGroupAssociation>(this IOrderItemShipGroupAssociationState state)
            where TCreateOrderItemShipGroupAssociation : ICreateOrderItemShipGroupAssociation, new()
            where TMergePatchOrderItemShipGroupAssociation : IMergePatchOrderItemShipGroupAssociation, new()
        {
            bool bUnsaved = ((IOrderItemShipGroupAssociationState)state).IsUnsaved;
            if (bUnsaved)
            {
                return state.ToCreateOrderItemShipGroupAssociation<TCreateOrderItemShipGroupAssociation>();
            }
            else 
            {
                return state.ToMergePatchOrderItemShipGroupAssociation<TMergePatchOrderItemShipGroupAssociation>();
            }
        }

        public static TRemoveOrderItemShipGroupAssociation ToRemoveOrderItemShipGroupAssociation<TRemoveOrderItemShipGroupAssociation>(this IOrderItemShipGroupAssociationState state)
            where TRemoveOrderItemShipGroupAssociation : IRemoveOrderItemShipGroupAssociation, new()
        {
            var cmd = new TRemoveOrderItemShipGroupAssociation();
            cmd.OrderItemSeqId = state.OrderItemSeqId;
            return cmd;
        }

        public static TMergePatchOrderItemShipGroupAssociation ToMergePatchOrderItemShipGroupAssociation<TMergePatchOrderItemShipGroupAssociation>(this IOrderItemShipGroupAssociationState state)
            where TMergePatchOrderItemShipGroupAssociation : IMergePatchOrderItemShipGroupAssociation, new()
        {
            var cmd = new TMergePatchOrderItemShipGroupAssociation();

            cmd.OrderItemSeqId = state.OrderItemSeqId;
            cmd.Quantity = state.Quantity;
            cmd.CancelQuantity = state.CancelQuantity;
            cmd.NumberOfPackages = state.NumberOfPackages;
            cmd.NumberOfContainers = state.NumberOfContainers;
            cmd.NumberOfPakagesPerContainer = state.NumberOfPakagesPerContainer;
            cmd.OrderItemShipGroupAssociationKey = state.OrderItemShipGroupAssociationKey;
            cmd.Active = ((IOrderItemShipGroupAssociationStateProperties)state).Active;
            cmd.OrderId = state.OrderId;
            cmd.OrderShipGroupShipGroupSeqId = state.OrderShipGroupShipGroupSeqId;
            
            if (state.Quantity == null) { cmd.IsPropertyQuantityRemoved = true; }
            if (state.CancelQuantity == null) { cmd.IsPropertyCancelQuantityRemoved = true; }
            if (state.OrderItemShipGroupAssociationKey == null) { cmd.IsPropertyOrderItemShipGroupAssociationKeyRemoved = true; }
            return cmd;
        }

        public static TCreateOrderItemShipGroupAssociation ToCreateOrderItemShipGroupAssociation<TCreateOrderItemShipGroupAssociation>(this IOrderItemShipGroupAssociationState state)
            where TCreateOrderItemShipGroupAssociation : ICreateOrderItemShipGroupAssociation, new()
        {
            var cmd = new TCreateOrderItemShipGroupAssociation();

            cmd.OrderItemSeqId = state.OrderItemSeqId;
            cmd.Quantity = state.Quantity;
            cmd.CancelQuantity = state.CancelQuantity;
            cmd.NumberOfPackages = state.NumberOfPackages;
            cmd.NumberOfContainers = state.NumberOfContainers;
            cmd.NumberOfPakagesPerContainer = state.NumberOfPakagesPerContainer;
            cmd.OrderItemShipGroupAssociationKey = state.OrderItemShipGroupAssociationKey;
            cmd.Active = ((IOrderItemShipGroupAssociationStateProperties)state).Active;
            cmd.OrderId = state.OrderId;
            cmd.OrderShipGroupShipGroupSeqId = state.OrderShipGroupShipGroupSeqId;
            return cmd;
        }
		

	}

}

