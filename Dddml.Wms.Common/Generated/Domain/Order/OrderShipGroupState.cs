// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Order
{

	public partial class OrderShipGroupState : OrderShipGroupStateProperties, IOrderShipGroupState, ISaveable
	{

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

		public virtual string UpdatedBy { get; set; }

		public virtual DateTime UpdatedAt { get; set; }

		public virtual bool Deleted { get; set; }


		#region IIdentity implementation

        private OrderShipGroupId _orderShipGroupId = new OrderShipGroupId();

        public virtual OrderShipGroupId OrderShipGroupId 
        {
            get { return this._orderShipGroupId; }
            set { this._orderShipGroupId = value; }
        }

		OrderShipGroupId IGlobalIdentity<OrderShipGroupId>.GlobalId {
			get {
				return  this.OrderShipGroupId;
			}
		}

        string ILocalIdentity<string>.LocalId
        {
            get
            {
                return this.ShipGroupSeqId;
            }
        }


        public override string OrderId {
			get {
				return this.OrderShipGroupId.OrderId;
			}
			set {
				this.OrderShipGroupId.OrderId = value;
			}
		}

        public override string ShipGroupSeqId {
			get {
				return this.OrderShipGroupId.ShipGroupSeqId;
			}
			set {
				this.OrderShipGroupId.ShipGroupSeqId = value;
			}
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
			return this.Active;
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
			get
			{
				return this.Deleted;
			}
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
			get
			{
				return this.CreatedBy;
			}
			set
			{
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt
		{
			get
			{
				return this.CreatedAt;
			}
			set
			{
				this.CreatedAt = value;
			}
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
			get { return this.UpdatedBy; }
			set { this.UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
			get { return this.UpdatedAt; }
			set { this.UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IEntityVersioned<long>.EntityVersion
		{
			get
			{
				return this.Version;
			}
		}


		#endregion

        bool IOrderShipGroupState.IsUnsaved
        {
            get { return this.Version == VersionZero; }
        }

		public static long VersionZero
		{
			get
			{
				return (long)0;
			}
		}


        private IOrderItemShipGroupAssociationStates _orderItemShipGroupAssociations;
      
        public virtual IOrderItemShipGroupAssociationStates OrderItemShipGroupAssociations
        {
            get
            {
                return this._orderItemShipGroupAssociations;
            }
            set
            {
                this._orderItemShipGroupAssociations = value;
            }
        }


        public virtual bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }
	
        private bool _forReapplying;

        public virtual bool ForReapplying
        {
            get { return _forReapplying; }
            set { _forReapplying = value; } 
        }

        public OrderShipGroupState() : this(false)
        {
        }

        public OrderShipGroupState(bool forReapplying)
        {
            this._forReapplying = forReapplying;
            _orderItemShipGroupAssociations = new OrderItemShipGroupAssociationStates(this);

            InitializeProperties();
        }


		#region Saveable Implements

        public virtual void Save()
        {
            _orderItemShipGroupAssociations.Save();

        }


		#endregion


		public virtual void When(IOrderShipGroupStateCreated e)
		{
			ThrowOnWrongEvent(e);
			this.ShipmentMethodTypeId = e.ShipmentMethodTypeId;

			this.SupplierPartyId = e.SupplierPartyId;

			this.VendorPartyId = e.VendorPartyId;

			this.CarrierPartyId = e.CarrierPartyId;

			this.CarrierRoleTypeId = e.CarrierRoleTypeId;

			this.FacilityId = e.FacilityId;

			this.DestinationFacilityId = e.DestinationFacilityId;

			this.ContactMechId = e.ContactMechId;

			this.TelecomContactMechId = e.TelecomContactMechId;

			this.TrackingNumber = e.TrackingNumber;

			this.MaySplit = e.MaySplit;

			this.GiftMessage = e.GiftMessage;

			this.IsGift = e.IsGift;

			this.ShipAfterDate = e.ShipAfterDate;

			this.ShipByDate = e.ShipByDate;

			this.EstimatedShipDate = e.EstimatedShipDate;

			this.EstimatedDeliveryDate = e.EstimatedDeliveryDate;

			this.PickwaveId = e.PickwaveId;

			this.OrderShipGroupStatusId = e.OrderShipGroupStatusId;

            this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);

			this.Deleted = false;

			this.CreatedBy = e.CreatedBy;
			this.CreatedAt = e.CreatedAt;

			foreach (IOrderItemShipGroupAssociationStateCreated innerEvent in e.OrderItemShipGroupAssociationEvents) {
				IOrderItemShipGroupAssociationState innerState = this.OrderItemShipGroupAssociations.Get(innerEvent.GlobalId.OrderItemSeqId, true);
				innerState.Mutate (innerEvent);
			}

		}


		public virtual void When(IOrderShipGroupStateMergePatched e)
		{
			ThrowOnWrongEvent(e);

			if (e.ShipmentMethodTypeId == null)
			{
				if (e.IsPropertyShipmentMethodTypeIdRemoved)
				{
					this.ShipmentMethodTypeId = default(string);
				}
			}
			else
			{
				this.ShipmentMethodTypeId = e.ShipmentMethodTypeId;
			}

			if (e.SupplierPartyId == null)
			{
				if (e.IsPropertySupplierPartyIdRemoved)
				{
					this.SupplierPartyId = default(string);
				}
			}
			else
			{
				this.SupplierPartyId = e.SupplierPartyId;
			}

			if (e.VendorPartyId == null)
			{
				if (e.IsPropertyVendorPartyIdRemoved)
				{
					this.VendorPartyId = default(string);
				}
			}
			else
			{
				this.VendorPartyId = e.VendorPartyId;
			}

			if (e.CarrierPartyId == null)
			{
				if (e.IsPropertyCarrierPartyIdRemoved)
				{
					this.CarrierPartyId = default(string);
				}
			}
			else
			{
				this.CarrierPartyId = e.CarrierPartyId;
			}

			if (e.CarrierRoleTypeId == null)
			{
				if (e.IsPropertyCarrierRoleTypeIdRemoved)
				{
					this.CarrierRoleTypeId = default(string);
				}
			}
			else
			{
				this.CarrierRoleTypeId = e.CarrierRoleTypeId;
			}

			if (e.FacilityId == null)
			{
				if (e.IsPropertyFacilityIdRemoved)
				{
					this.FacilityId = default(string);
				}
			}
			else
			{
				this.FacilityId = e.FacilityId;
			}

			if (e.DestinationFacilityId == null)
			{
				if (e.IsPropertyDestinationFacilityIdRemoved)
				{
					this.DestinationFacilityId = default(string);
				}
			}
			else
			{
				this.DestinationFacilityId = e.DestinationFacilityId;
			}

			if (e.ContactMechId == null)
			{
				if (e.IsPropertyContactMechIdRemoved)
				{
					this.ContactMechId = default(string);
				}
			}
			else
			{
				this.ContactMechId = e.ContactMechId;
			}

			if (e.TelecomContactMechId == null)
			{
				if (e.IsPropertyTelecomContactMechIdRemoved)
				{
					this.TelecomContactMechId = default(string);
				}
			}
			else
			{
				this.TelecomContactMechId = e.TelecomContactMechId;
			}

			if (e.TrackingNumber == null)
			{
				if (e.IsPropertyTrackingNumberRemoved)
				{
					this.TrackingNumber = default(string);
				}
			}
			else
			{
				this.TrackingNumber = e.TrackingNumber;
			}

			if (e.MaySplit == null)
			{
				if (e.IsPropertyMaySplitRemoved)
				{
					this.MaySplit = default(string);
				}
			}
			else
			{
				this.MaySplit = e.MaySplit;
			}

			if (e.GiftMessage == null)
			{
				if (e.IsPropertyGiftMessageRemoved)
				{
					this.GiftMessage = default(string);
				}
			}
			else
			{
				this.GiftMessage = e.GiftMessage;
			}

			if (e.IsGift == null)
			{
				if (e.IsPropertyIsGiftRemoved)
				{
					this.IsGift = default(string);
				}
			}
			else
			{
				this.IsGift = e.IsGift;
			}

			if (e.ShipAfterDate == null)
			{
				if (e.IsPropertyShipAfterDateRemoved)
				{
					this.ShipAfterDate = default(DateTime?);
				}
			}
			else
			{
				this.ShipAfterDate = e.ShipAfterDate;
			}

			if (e.ShipByDate == null)
			{
				if (e.IsPropertyShipByDateRemoved)
				{
					this.ShipByDate = default(DateTime?);
				}
			}
			else
			{
				this.ShipByDate = e.ShipByDate;
			}

			if (e.EstimatedShipDate == null)
			{
				if (e.IsPropertyEstimatedShipDateRemoved)
				{
					this.EstimatedShipDate = default(DateTime?);
				}
			}
			else
			{
				this.EstimatedShipDate = e.EstimatedShipDate;
			}

			if (e.EstimatedDeliveryDate == null)
			{
				if (e.IsPropertyEstimatedDeliveryDateRemoved)
				{
					this.EstimatedDeliveryDate = default(DateTime?);
				}
			}
			else
			{
				this.EstimatedDeliveryDate = e.EstimatedDeliveryDate;
			}

			if (e.PickwaveId == null)
			{
				if (e.IsPropertyPickwaveIdRemoved)
				{
					this.PickwaveId = default(long?);
				}
			}
			else
			{
				this.PickwaveId = e.PickwaveId;
			}

			if (e.OrderShipGroupStatusId == null)
			{
				if (e.IsPropertyOrderShipGroupStatusIdRemoved)
				{
					this.OrderShipGroupStatusId = default(string);
				}
			}
			else
			{
				this.OrderShipGroupStatusId = e.OrderShipGroupStatusId;
			}

			if (e.Active == null)
			{
				if (e.IsPropertyActiveRemoved)
				{
					this.Active = default(bool);
				}
			}
			else
			{
				this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);
			}


			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;


			foreach (IOrderItemShipGroupAssociationEvent innerEvent in e.OrderItemShipGroupAssociationEvents)
            {
                IOrderItemShipGroupAssociationState innerState = this.OrderItemShipGroupAssociations.Get(innerEvent.GlobalId.OrderItemSeqId);

                innerState.Mutate(innerEvent);
                var removed = innerEvent as IOrderItemShipGroupAssociationStateRemoved;
                if (removed != null)
                {
                    this.OrderItemShipGroupAssociations.Remove(innerState);
                }
          
            }

		}

		public virtual void When(IOrderShipGroupStateRemoved e)
		{
			ThrowOnWrongEvent(e);

			this.Deleted = true;
			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;

            foreach (var innerState in this.OrderItemShipGroupAssociations)
            {
                this.OrderItemShipGroupAssociations.Remove(innerState);
                
                var innerE = e.NewOrderItemShipGroupAssociationStateRemoved(innerState.OrderItemSeqId);
                ((OrderItemShipGroupAssociationEventBase)innerE).CreatedAt = e.CreatedAt;
                ((OrderItemShipGroupAssociationEventBase)innerE).CreatedBy = e.CreatedBy;
                innerState.When(innerE);
                //e.AddOrderItemShipGroupAssociationEvent(innerE);

            }

		}


		public virtual void Mutate(IEvent e)
		{
            StateReadOnly = false;
			((dynamic)this).When((dynamic)e);
		}

        protected void ThrowOnWrongEvent(IOrderShipGroupEvent e)
        {
            var id = new System.Text.StringBuilder(); 
            id.Append("[").Append("OrderShipGroup|");

            var stateEntityIdOrderId = (this as IGlobalIdentity<OrderShipGroupId>).GlobalId.OrderId;
            var eventEntityIdOrderId = e.OrderShipGroupEventId.OrderId;
            if (stateEntityIdOrderId != eventEntityIdOrderId)
            {
                throw DomainError.Named("mutateWrongEntity", "Entity Id OrderId {0} in state but entity id OrderId {1} in event", stateEntityIdOrderId, eventEntityIdOrderId);
            }
            id.Append(stateEntityIdOrderId).Append(",");

            var stateEntityIdShipGroupSeqId = (this as IGlobalIdentity<OrderShipGroupId>).GlobalId.ShipGroupSeqId;
            var eventEntityIdShipGroupSeqId = e.OrderShipGroupEventId.ShipGroupSeqId;
            if (stateEntityIdShipGroupSeqId != eventEntityIdShipGroupSeqId)
            {
                throw DomainError.Named("mutateWrongEntity", "Entity Id ShipGroupSeqId {0} in state but entity id ShipGroupSeqId {1} in event", stateEntityIdShipGroupSeqId, eventEntityIdShipGroupSeqId);
            }
            id.Append(stateEntityIdShipGroupSeqId).Append(",");

            id.Append("]");

            if (ForReapplying) { return; }
            var stateVersion = this.Version;
            var stateEvent = e is IOrderShipGroupStateEvent ? (IOrderShipGroupStateEvent)e : null;
            if (e == null) { return; }
            stateEvent.Version = stateVersion;
            //var stateEventStateVersion = stateEvent.Version;
            //if (OrderShipGroupState.VersionZero == stateEventStateVersion)
            //{
            //    stateEventStateVersion = stateEvent.Version = stateVersion;
            //}
            //if (stateVersion != stateEventStateVersion)
            //{
            //    throw OptimisticConcurrencyException.Create(stateVersion, stateEventStateVersion, id.ToString());
            //}
        }
    }

}

