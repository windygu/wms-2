// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Order
{

    public class OrderItemShipGroupAssociationStateEventDtoConverter
    {
        public virtual OrderItemShipGroupAssociationStateCreatedOrMergePatchedOrRemovedDto ToOrderItemShipGroupAssociationStateEventDto(IOrderItemShipGroupAssociationEvent stateEvent)
        {
            if (stateEvent.EventType == StateEventType.Created)
            {
                var e = (IOrderItemShipGroupAssociationStateCreated)stateEvent;
                return ToOrderItemShipGroupAssociationStateCreatedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.MergePatched)
            {
                var e = (IOrderItemShipGroupAssociationStateMergePatched)stateEvent;
                return ToOrderItemShipGroupAssociationStateMergePatchedDto(e);
            }
            else if (stateEvent.EventType == StateEventType.Removed)
            {
                var e = (IOrderItemShipGroupAssociationStateRemoved)stateEvent;
                return ToOrderItemShipGroupAssociationStateRemovedDto(e);
            }
            throw DomainError.Named("invalidEventType", String.Format("Invalid state event type: {0}", stateEvent.EventType));
        }

        public virtual OrderItemShipGroupAssociationStateCreatedDto ToOrderItemShipGroupAssociationStateCreatedDto(IOrderItemShipGroupAssociationStateCreated e)
        {
            var dto = new OrderItemShipGroupAssociationStateCreatedDto();
            dto.OrderItemShipGroupAssociationEventId = e.OrderItemShipGroupAssociationEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Quantity = e.Quantity;
            dto.CancelQuantity = e.CancelQuantity;
            dto.NumberOfPackages = e.NumberOfPackages;
            dto.NumberOfContainers = e.NumberOfContainers;
            dto.NumberOfPakagesPerContainer = e.NumberOfPakagesPerContainer;
            dto.OrderItemShipGroupAssociationKey = e.OrderItemShipGroupAssociationKey;
            dto.Active = e.Active;
            return dto;
        }

        public virtual OrderItemShipGroupAssociationStateMergePatchedDto ToOrderItemShipGroupAssociationStateMergePatchedDto(IOrderItemShipGroupAssociationStateMergePatched e)
        {
            var dto = new OrderItemShipGroupAssociationStateMergePatchedDto();
            dto.OrderItemShipGroupAssociationEventId = e.OrderItemShipGroupAssociationEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;
            dto.Quantity = e.Quantity;
            dto.CancelQuantity = e.CancelQuantity;
            dto.NumberOfPackages = e.NumberOfPackages;
            dto.NumberOfContainers = e.NumberOfContainers;
            dto.NumberOfPakagesPerContainer = e.NumberOfPakagesPerContainer;
            dto.OrderItemShipGroupAssociationKey = e.OrderItemShipGroupAssociationKey;
            dto.Active = e.Active;
            dto.IsPropertyQuantityRemoved = e.IsPropertyQuantityRemoved;
            dto.IsPropertyCancelQuantityRemoved = e.IsPropertyCancelQuantityRemoved;
            dto.IsPropertyNumberOfPackagesRemoved = e.IsPropertyNumberOfPackagesRemoved;
            dto.IsPropertyNumberOfContainersRemoved = e.IsPropertyNumberOfContainersRemoved;
            dto.IsPropertyNumberOfPakagesPerContainerRemoved = e.IsPropertyNumberOfPakagesPerContainerRemoved;
            dto.IsPropertyOrderItemShipGroupAssociationKeyRemoved = e.IsPropertyOrderItemShipGroupAssociationKeyRemoved;
            dto.IsPropertyActiveRemoved = e.IsPropertyActiveRemoved;

            return dto;
        }


        public virtual OrderItemShipGroupAssociationStateRemovedDto ToOrderItemShipGroupAssociationStateRemovedDto(IOrderItemShipGroupAssociationStateRemoved e)
        {
            var dto = new OrderItemShipGroupAssociationStateRemovedDto();
            dto.OrderItemShipGroupAssociationEventId = e.OrderItemShipGroupAssociationEventId;
            dto.CreatedAt = e.CreatedAt;
            dto.CreatedBy = e.CreatedBy;
            dto.Version = e.Version;
            dto.CommandId = e.CommandId;

            return dto;
        }


    }


}

