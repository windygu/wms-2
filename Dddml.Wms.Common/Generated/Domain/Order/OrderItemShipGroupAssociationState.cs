// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Order
{

	public partial class OrderItemShipGroupAssociationState : OrderItemShipGroupAssociationStateProperties, IOrderItemShipGroupAssociationState
	{

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

		public virtual string UpdatedBy { get; set; }

		public virtual DateTime UpdatedAt { get; set; }

		public virtual bool Deleted { get; set; }


		#region IIdentity implementation

        private OrderItemShipGroupAssociationId _orderItemShipGroupAssociationId = new OrderItemShipGroupAssociationId();

        public virtual OrderItemShipGroupAssociationId OrderItemShipGroupAssociationId 
        {
            get { return this._orderItemShipGroupAssociationId; }
            set { this._orderItemShipGroupAssociationId = value; }
        }

		OrderItemShipGroupAssociationId IGlobalIdentity<OrderItemShipGroupAssociationId>.GlobalId {
			get {
				return  this.OrderItemShipGroupAssociationId;
			}
		}

        string ILocalIdentity<string>.LocalId
        {
            get
            {
                return this.OrderItemSeqId;
            }
        }


        public override string OrderId {
			get {
				return this.OrderItemShipGroupAssociationId.OrderId;
			}
			set {
				this.OrderItemShipGroupAssociationId.OrderId = value;
			}
		}

        public override string OrderShipGroupShipGroupSeqId {
			get {
				return this.OrderItemShipGroupAssociationId.OrderShipGroupShipGroupSeqId;
			}
			set {
				this.OrderItemShipGroupAssociationId.OrderShipGroupShipGroupSeqId = value;
			}
		}

        public override string OrderItemSeqId {
			get {
				return this.OrderItemShipGroupAssociationId.OrderItemSeqId;
			}
			set {
				this.OrderItemShipGroupAssociationId.OrderItemSeqId = value;
			}
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
			return this.Active;
		}

		#endregion

		#region IDeleted implementation

		bool IDeleted.Deleted
		{
			get
			{
				return this.Deleted;
			}
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
			get
			{
				return this.CreatedBy;
			}
			set
			{
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt
		{
			get
			{
				return this.CreatedAt;
			}
			set
			{
				this.CreatedAt = value;
			}
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
			get { return this.UpdatedBy; }
			set { this.UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
			get { return this.UpdatedAt; }
			set { this.UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IEntityVersioned<long>.EntityVersion
		{
			get
			{
				return this.Version;
			}
		}


		#endregion

        bool IOrderItemShipGroupAssociationState.IsUnsaved
        {
            get { return this.Version == VersionZero; }
        }

		public static long VersionZero
		{
			get
			{
				return (long)0;
			}
		}


        public virtual bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }
	
        private bool _forReapplying;

        public virtual bool ForReapplying
        {
            get { return _forReapplying; }
            set { _forReapplying = value; } 
        }

        public OrderItemShipGroupAssociationState() : this(false)
        {
        }

        public OrderItemShipGroupAssociationState(bool forReapplying)
        {
            this._forReapplying = forReapplying;
            InitializeProperties();
        }


		public virtual void When(IOrderItemShipGroupAssociationStateCreated e)
		{
			ThrowOnWrongEvent(e);
			this.Quantity = e.Quantity;

			this.CancelQuantity = e.CancelQuantity;

            this.NumberOfPackages = (e.NumberOfPackages != null && e.NumberOfPackages.HasValue) ? e.NumberOfPackages.Value : default(int);

            this.NumberOfContainers = (e.NumberOfContainers != null && e.NumberOfContainers.HasValue) ? e.NumberOfContainers.Value : default(int);

            this.NumberOfPakagesPerContainer = (e.NumberOfPakagesPerContainer != null && e.NumberOfPakagesPerContainer.HasValue) ? e.NumberOfPakagesPerContainer.Value : default(int);

			this.OrderItemShipGroupAssociationKey = e.OrderItemShipGroupAssociationKey;

            this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);

			this.Deleted = false;

			this.CreatedBy = e.CreatedBy;
			this.CreatedAt = e.CreatedAt;


		}


		public virtual void When(IOrderItemShipGroupAssociationStateMergePatched e)
		{
			ThrowOnWrongEvent(e);

			if (e.Quantity == null)
			{
				if (e.IsPropertyQuantityRemoved)
				{
					this.Quantity = default(decimal?);
				}
			}
			else
			{
				this.Quantity = e.Quantity;
			}

			if (e.CancelQuantity == null)
			{
				if (e.IsPropertyCancelQuantityRemoved)
				{
					this.CancelQuantity = default(decimal?);
				}
			}
			else
			{
				this.CancelQuantity = e.CancelQuantity;
			}

			if (e.NumberOfPackages == null)
			{
				if (e.IsPropertyNumberOfPackagesRemoved)
				{
					this.NumberOfPackages = default(int);
				}
			}
			else
			{
				this.NumberOfPackages = (e.NumberOfPackages != null && e.NumberOfPackages.HasValue) ? e.NumberOfPackages.Value : default(int);
			}

			if (e.NumberOfContainers == null)
			{
				if (e.IsPropertyNumberOfContainersRemoved)
				{
					this.NumberOfContainers = default(int);
				}
			}
			else
			{
				this.NumberOfContainers = (e.NumberOfContainers != null && e.NumberOfContainers.HasValue) ? e.NumberOfContainers.Value : default(int);
			}

			if (e.NumberOfPakagesPerContainer == null)
			{
				if (e.IsPropertyNumberOfPakagesPerContainerRemoved)
				{
					this.NumberOfPakagesPerContainer = default(int);
				}
			}
			else
			{
				this.NumberOfPakagesPerContainer = (e.NumberOfPakagesPerContainer != null && e.NumberOfPakagesPerContainer.HasValue) ? e.NumberOfPakagesPerContainer.Value : default(int);
			}

			if (e.OrderItemShipGroupAssociationKey == null)
			{
				if (e.IsPropertyOrderItemShipGroupAssociationKeyRemoved)
				{
					this.OrderItemShipGroupAssociationKey = default(string);
				}
			}
			else
			{
				this.OrderItemShipGroupAssociationKey = e.OrderItemShipGroupAssociationKey;
			}

			if (e.Active == null)
			{
				if (e.IsPropertyActiveRemoved)
				{
					this.Active = default(bool);
				}
			}
			else
			{
				this.Active = (e.Active != null && e.Active.HasValue) ? e.Active.Value : default(bool);
			}


			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;


		}

		public virtual void When(IOrderItemShipGroupAssociationStateRemoved e)
		{
			ThrowOnWrongEvent(e);

			this.Deleted = true;
			this.UpdatedBy = e.CreatedBy;
			this.UpdatedAt = e.CreatedAt;

		}


		public virtual void Mutate(IEvent e)
		{
            StateReadOnly = false;
			((dynamic)this).When((dynamic)e);
		}

        protected void ThrowOnWrongEvent(IOrderItemShipGroupAssociationEvent e)
        {
            var id = new System.Text.StringBuilder(); 
            id.Append("[").Append("OrderItemShipGroupAssociation|");

            var stateEntityIdOrderId = (this as IGlobalIdentity<OrderItemShipGroupAssociationId>).GlobalId.OrderId;
            var eventEntityIdOrderId = e.OrderItemShipGroupAssociationEventId.OrderId;
            if (stateEntityIdOrderId != eventEntityIdOrderId)
            {
                throw DomainError.Named("mutateWrongEntity", "Entity Id OrderId {0} in state but entity id OrderId {1} in event", stateEntityIdOrderId, eventEntityIdOrderId);
            }
            id.Append(stateEntityIdOrderId).Append(",");

            var stateEntityIdOrderShipGroupShipGroupSeqId = (this as IGlobalIdentity<OrderItemShipGroupAssociationId>).GlobalId.OrderShipGroupShipGroupSeqId;
            var eventEntityIdOrderShipGroupShipGroupSeqId = e.OrderItemShipGroupAssociationEventId.OrderShipGroupShipGroupSeqId;
            if (stateEntityIdOrderShipGroupShipGroupSeqId != eventEntityIdOrderShipGroupShipGroupSeqId)
            {
                throw DomainError.Named("mutateWrongEntity", "Entity Id OrderShipGroupShipGroupSeqId {0} in state but entity id OrderShipGroupShipGroupSeqId {1} in event", stateEntityIdOrderShipGroupShipGroupSeqId, eventEntityIdOrderShipGroupShipGroupSeqId);
            }
            id.Append(stateEntityIdOrderShipGroupShipGroupSeqId).Append(",");

            var stateEntityIdOrderItemSeqId = (this as IGlobalIdentity<OrderItemShipGroupAssociationId>).GlobalId.OrderItemSeqId;
            var eventEntityIdOrderItemSeqId = e.OrderItemShipGroupAssociationEventId.OrderItemSeqId;
            if (stateEntityIdOrderItemSeqId != eventEntityIdOrderItemSeqId)
            {
                throw DomainError.Named("mutateWrongEntity", "Entity Id OrderItemSeqId {0} in state but entity id OrderItemSeqId {1} in event", stateEntityIdOrderItemSeqId, eventEntityIdOrderItemSeqId);
            }
            id.Append(stateEntityIdOrderItemSeqId).Append(",");

            id.Append("]");

            if (ForReapplying) { return; }
            var stateVersion = this.Version;
            var stateEvent = e is IOrderItemShipGroupAssociationStateEvent ? (IOrderItemShipGroupAssociationStateEvent)e : null;
            if (e == null) { return; }
            stateEvent.Version = stateVersion;
            //var stateEventStateVersion = stateEvent.Version;
            //if (OrderItemShipGroupAssociationState.VersionZero == stateEventStateVersion)
            //{
            //    stateEventStateVersion = stateEvent.Version = stateVersion;
            //}
            //if (stateVersion != stateEventStateVersion)
            //{
            //    throw OptimisticConcurrencyException.Create(stateVersion, stateEventStateVersion, id.ToString());
            //}
        }
    }

}

