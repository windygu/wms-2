// <autogenerated>
//   This file was generated by T4 code generator GenerateOrderDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Order;
using Dddml.Wms.Domain.PartyRole;

namespace Dddml.Wms.Domain.Order
{

	public abstract class OrderStateEventDtoBase : IEventDto, IOrderStateCreated, IOrderStateMergePatched
	{

        private OrderEventId _orderEventId;

		protected internal virtual OrderEventId OrderEventId 
        {
            get 
            {
                if (_orderEventId == null) { _orderEventId = new OrderEventId(); }
                return _orderEventId;
            }
            set
            {
                _orderEventId = value;
            }
        }

        public virtual string OrderId
        {
            get { return OrderEventId.OrderId; }
            set { OrderEventId.OrderId = value; }
        }

        public virtual long Version
        {
            get { return OrderEventId.Version; }
            set { OrderEventId.Version = value; }
        }

		public virtual string OrderTypeId { get; set; }

		public virtual string OrderName { get; set; }

		public virtual string ExternalId { get; set; }

		public virtual string SalesChannelEnumId { get; set; }

		public virtual DateTime? OrderDate { get; set; }

		public virtual string Priority { get; set; }

		public virtual DateTime? EntryDate { get; set; }

		public virtual DateTime? PickSheetPrintedDate { get; set; }

		public virtual string StatusId { get; set; }

		public virtual string CurrencyUomId { get; set; }

		public virtual string SyncStatusId { get; set; }

		public virtual string BillingAccountId { get; set; }

		public virtual string OriginFacilityId { get; set; }

		public virtual string WebSiteId { get; set; }

		public virtual string ProductStoreId { get; set; }

		public virtual string TerminalId { get; set; }

		public virtual string TransactionId { get; set; }

		public virtual string AutoOrderShoppingListId { get; set; }

		public virtual string NeedsInventoryIssuance { get; set; }

		public virtual string IsRushOrder { get; set; }

		public virtual string InternalCode { get; set; }

		public virtual decimal? RemainingSubTotal { get; set; }

		public virtual decimal? GrandTotal { get; set; }

		public virtual string InvoicePerShipment { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string CreatedBy { get; set; }

		public virtual DateTime CreatedAt { get; set; }

        public virtual string CommandId { get; set; }

        string IEvent.CommandId { get { return this.CommandId; } set { this.CommandId = value; } }

		OrderEventId IGlobalIdentity<OrderEventId>.GlobalId {
			get 
			{
				return this.OrderEventId;
			}
		}

        public virtual bool EventReadOnly { get; set; }

        bool IOrderEvent.ReadOnly
        {
            get
            {
                return this.EventReadOnly;
            }
            set
            {
                this.EventReadOnly = value;
            }
        }

		public virtual bool? IsPropertyOrderTypeIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyOrderTypeIdRemoved
        {
            get 
            {
                var b = this.IsPropertyOrderTypeIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyOrderTypeIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyOrderNameRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyOrderNameRemoved
        {
            get 
            {
                var b = this.IsPropertyOrderNameRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyOrderNameRemoved = value;
            }
        }

		public virtual bool? IsPropertyExternalIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyExternalIdRemoved
        {
            get 
            {
                var b = this.IsPropertyExternalIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyExternalIdRemoved = value;
            }
        }

		public virtual bool? IsPropertySalesChannelEnumIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertySalesChannelEnumIdRemoved
        {
            get 
            {
                var b = this.IsPropertySalesChannelEnumIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertySalesChannelEnumIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyOrderDateRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyOrderDateRemoved
        {
            get 
            {
                var b = this.IsPropertyOrderDateRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyOrderDateRemoved = value;
            }
        }

		public virtual bool? IsPropertyPriorityRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyPriorityRemoved
        {
            get 
            {
                var b = this.IsPropertyPriorityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPriorityRemoved = value;
            }
        }

		public virtual bool? IsPropertyEntryDateRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyEntryDateRemoved
        {
            get 
            {
                var b = this.IsPropertyEntryDateRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyEntryDateRemoved = value;
            }
        }

		public virtual bool? IsPropertyPickSheetPrintedDateRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyPickSheetPrintedDateRemoved
        {
            get 
            {
                var b = this.IsPropertyPickSheetPrintedDateRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyPickSheetPrintedDateRemoved = value;
            }
        }

		public virtual bool? IsPropertyStatusIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyStatusIdRemoved
        {
            get 
            {
                var b = this.IsPropertyStatusIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyStatusIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyCurrencyUomIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyCurrencyUomIdRemoved
        {
            get 
            {
                var b = this.IsPropertyCurrencyUomIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyCurrencyUomIdRemoved = value;
            }
        }

		public virtual bool? IsPropertySyncStatusIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertySyncStatusIdRemoved
        {
            get 
            {
                var b = this.IsPropertySyncStatusIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertySyncStatusIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyBillingAccountIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyBillingAccountIdRemoved
        {
            get 
            {
                var b = this.IsPropertyBillingAccountIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyBillingAccountIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyOriginFacilityIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyOriginFacilityIdRemoved
        {
            get 
            {
                var b = this.IsPropertyOriginFacilityIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyOriginFacilityIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyWebSiteIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyWebSiteIdRemoved
        {
            get 
            {
                var b = this.IsPropertyWebSiteIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyWebSiteIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyProductStoreIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyProductStoreIdRemoved
        {
            get 
            {
                var b = this.IsPropertyProductStoreIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyProductStoreIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyTerminalIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyTerminalIdRemoved
        {
            get 
            {
                var b = this.IsPropertyTerminalIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyTerminalIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyTransactionIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyTransactionIdRemoved
        {
            get 
            {
                var b = this.IsPropertyTransactionIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyTransactionIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyAutoOrderShoppingListIdRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyAutoOrderShoppingListIdRemoved
        {
            get 
            {
                var b = this.IsPropertyAutoOrderShoppingListIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyAutoOrderShoppingListIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyNeedsInventoryIssuanceRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyNeedsInventoryIssuanceRemoved
        {
            get 
            {
                var b = this.IsPropertyNeedsInventoryIssuanceRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyNeedsInventoryIssuanceRemoved = value;
            }
        }

		public virtual bool? IsPropertyIsRushOrderRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyIsRushOrderRemoved
        {
            get 
            {
                var b = this.IsPropertyIsRushOrderRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyIsRushOrderRemoved = value;
            }
        }

		public virtual bool? IsPropertyInternalCodeRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyInternalCodeRemoved
        {
            get 
            {
                var b = this.IsPropertyInternalCodeRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyInternalCodeRemoved = value;
            }
        }

		public virtual bool? IsPropertyRemainingSubTotalRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyRemainingSubTotalRemoved
        {
            get 
            {
                var b = this.IsPropertyRemainingSubTotalRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyRemainingSubTotalRemoved = value;
            }
        }

		public virtual bool? IsPropertyGrandTotalRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyGrandTotalRemoved
        {
            get 
            {
                var b = this.IsPropertyGrandTotalRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyGrandTotalRemoved = value;
            }
        }

		public virtual bool? IsPropertyInvoicePerShipmentRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyInvoicePerShipmentRemoved
        {
            get 
            {
                var b = this.IsPropertyInvoicePerShipmentRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyInvoicePerShipmentRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IOrderStateMergePatched.IsPropertyActiveRemoved
        {
            get 
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return default(bool);
            }
            set 
            {
                this.IsPropertyActiveRemoved = value;
            }
        }

		string ICreated<string>.CreatedBy {
			get {
				return this.CreatedBy;
			}
			set {
				this.CreatedBy = value;
			}
		}

		DateTime ICreated<string>.CreatedAt {
			get {
				return this.CreatedAt;
			}
			set {
				this.CreatedAt = value;
			}
		}


        private OrderRoleStateCreatedOrMergePatchedOrRemovedDtos _orderRoleEvents = new OrderRoleStateCreatedOrMergePatchedOrRemovedDtos();

        public virtual OrderRoleStateCreatedOrMergePatchedOrRemovedDto[] OrderRoleEvents
        {
            get
            {
                return _orderRoleEvents.ToArray();
            }
            set
            {
                _orderRoleEvents.Clear();
                _orderRoleEvents.AddRange(value);
            }
        }



        private OrderRoleEventId NewOrderRoleEventId(PartyRoleId partyRoleId)
        {
            var eId = new OrderRoleEventId();
            eId.OrderId = this.OrderEventId.OrderId;
            eId.PartyRoleId = partyRoleId;
            eId.OrderVersion = this.OrderEventId.Version;
            return eId;
        }

        public virtual OrderRoleStateCreatedDto NewOrderRoleStateCreated(PartyRoleId partyRoleId)
        {
            var e = new OrderRoleStateCreatedDto();
            var eId = NewOrderRoleEventId(partyRoleId);
            e.OrderRoleEventId = eId;
            return e;
        }

        public virtual OrderRoleStateMergePatchedDto NewOrderRoleStateMergePatched(PartyRoleId partyRoleId)
        {
            var e = new OrderRoleStateMergePatchedDto();
            var eId = NewOrderRoleEventId(partyRoleId);
            e.OrderRoleEventId = eId;
            return e;
        }

        public virtual OrderRoleStateRemovedDto NewOrderRoleStateRemoved(PartyRoleId partyRoleId)
        {
            var e = new OrderRoleStateRemovedDto();
            var eId = NewOrderRoleEventId(partyRoleId);
            e.OrderRoleEventId = eId;
            return e;
        }

        IEnumerable<IOrderRoleStateCreated> IOrderStateCreated.OrderRoleEvents
        {
            get { return this._orderRoleEvents; }
        }

        void IOrderStateCreated.AddOrderRoleEvent(IOrderRoleStateCreated e)
        {
            this._orderRoleEvents.AddOrderRoleEvent(e);
        }

        IOrderRoleStateCreated IOrderStateCreated.NewOrderRoleStateCreated(PartyRoleId partyRoleId)
        {
            return NewOrderRoleStateCreated(partyRoleId);
        }

        IEnumerable<IOrderRoleEvent> IOrderStateMergePatched.OrderRoleEvents
        {
            get { return this._orderRoleEvents; }
        }

        void IOrderStateMergePatched.AddOrderRoleEvent(IOrderRoleEvent e)
        {
            this._orderRoleEvents.AddOrderRoleEvent(e);
        }

        IOrderRoleStateCreated IOrderStateMergePatched.NewOrderRoleStateCreated(PartyRoleId partyRoleId)
        {
            return NewOrderRoleStateCreated(partyRoleId);
        }

        IOrderRoleStateMergePatched IOrderStateMergePatched.NewOrderRoleStateMergePatched(PartyRoleId partyRoleId)
        {
            return NewOrderRoleStateMergePatched(partyRoleId);
        }

        IOrderRoleStateRemoved IOrderStateMergePatched.NewOrderRoleStateRemoved(PartyRoleId partyRoleId)
        {
            return NewOrderRoleStateRemoved(partyRoleId);
        }


        private OrderItemStateCreatedOrMergePatchedOrRemovedDtos _orderItemEvents = new OrderItemStateCreatedOrMergePatchedOrRemovedDtos();

        public virtual OrderItemStateCreatedOrMergePatchedOrRemovedDto[] OrderItemEvents
        {
            get
            {
                return _orderItemEvents.ToArray();
            }
            set
            {
                _orderItemEvents.Clear();
                _orderItemEvents.AddRange(value);
            }
        }



        private OrderItemEventId NewOrderItemEventId(string orderItemSeqId)
        {
            var eId = new OrderItemEventId();
            eId.OrderId = this.OrderEventId.OrderId;
            eId.OrderItemSeqId = orderItemSeqId;
            eId.OrderVersion = this.OrderEventId.Version;
            return eId;
        }

        public virtual OrderItemStateCreatedDto NewOrderItemStateCreated(string orderItemSeqId)
        {
            var e = new OrderItemStateCreatedDto();
            var eId = NewOrderItemEventId(orderItemSeqId);
            e.OrderItemEventId = eId;
            return e;
        }

        public virtual OrderItemStateMergePatchedDto NewOrderItemStateMergePatched(string orderItemSeqId)
        {
            var e = new OrderItemStateMergePatchedDto();
            var eId = NewOrderItemEventId(orderItemSeqId);
            e.OrderItemEventId = eId;
            return e;
        }

        IEnumerable<IOrderItemStateCreated> IOrderStateCreated.OrderItemEvents
        {
            get { return this._orderItemEvents; }
        }

        void IOrderStateCreated.AddOrderItemEvent(IOrderItemStateCreated e)
        {
            this._orderItemEvents.AddOrderItemEvent(e);
        }

        IOrderItemStateCreated IOrderStateCreated.NewOrderItemStateCreated(string orderItemSeqId)
        {
            return NewOrderItemStateCreated(orderItemSeqId);
        }

        IEnumerable<IOrderItemEvent> IOrderStateMergePatched.OrderItemEvents
        {
            get { return this._orderItemEvents; }
        }

        void IOrderStateMergePatched.AddOrderItemEvent(IOrderItemEvent e)
        {
            this._orderItemEvents.AddOrderItemEvent(e);
        }

        IOrderItemStateCreated IOrderStateMergePatched.NewOrderItemStateCreated(string orderItemSeqId)
        {
            return NewOrderItemStateCreated(orderItemSeqId);
        }

        IOrderItemStateMergePatched IOrderStateMergePatched.NewOrderItemStateMergePatched(string orderItemSeqId)
        {
            return NewOrderItemStateMergePatched(orderItemSeqId);
        }


        private OrderShipGroupStateCreatedOrMergePatchedOrRemovedDtos _orderShipGroupEvents = new OrderShipGroupStateCreatedOrMergePatchedOrRemovedDtos();

        public virtual OrderShipGroupStateCreatedOrMergePatchedOrRemovedDto[] OrderShipGroupEvents
        {
            get
            {
                return _orderShipGroupEvents.ToArray();
            }
            set
            {
                _orderShipGroupEvents.Clear();
                _orderShipGroupEvents.AddRange(value);
            }
        }



        private OrderShipGroupEventId NewOrderShipGroupEventId(string shipGroupSeqId)
        {
            var eId = new OrderShipGroupEventId();
            eId.OrderId = this.OrderEventId.OrderId;
            eId.ShipGroupSeqId = shipGroupSeqId;
            eId.OrderVersion = this.OrderEventId.Version;
            return eId;
        }

        public virtual OrderShipGroupStateCreatedDto NewOrderShipGroupStateCreated(string shipGroupSeqId)
        {
            var e = new OrderShipGroupStateCreatedDto();
            var eId = NewOrderShipGroupEventId(shipGroupSeqId);
            e.OrderShipGroupEventId = eId;
            return e;
        }

        public virtual OrderShipGroupStateMergePatchedDto NewOrderShipGroupStateMergePatched(string shipGroupSeqId)
        {
            var e = new OrderShipGroupStateMergePatchedDto();
            var eId = NewOrderShipGroupEventId(shipGroupSeqId);
            e.OrderShipGroupEventId = eId;
            return e;
        }

        public virtual OrderShipGroupStateRemovedDto NewOrderShipGroupStateRemoved(string shipGroupSeqId)
        {
            var e = new OrderShipGroupStateRemovedDto();
            var eId = NewOrderShipGroupEventId(shipGroupSeqId);
            e.OrderShipGroupEventId = eId;
            return e;
        }

        IEnumerable<IOrderShipGroupStateCreated> IOrderStateCreated.OrderShipGroupEvents
        {
            get { return this._orderShipGroupEvents; }
        }

        void IOrderStateCreated.AddOrderShipGroupEvent(IOrderShipGroupStateCreated e)
        {
            this._orderShipGroupEvents.AddOrderShipGroupEvent(e);
        }

        IOrderShipGroupStateCreated IOrderStateCreated.NewOrderShipGroupStateCreated(string shipGroupSeqId)
        {
            return NewOrderShipGroupStateCreated(shipGroupSeqId);
        }

        IEnumerable<IOrderShipGroupEvent> IOrderStateMergePatched.OrderShipGroupEvents
        {
            get { return this._orderShipGroupEvents; }
        }

        void IOrderStateMergePatched.AddOrderShipGroupEvent(IOrderShipGroupEvent e)
        {
            this._orderShipGroupEvents.AddOrderShipGroupEvent(e);
        }

        IOrderShipGroupStateCreated IOrderStateMergePatched.NewOrderShipGroupStateCreated(string shipGroupSeqId)
        {
            return NewOrderShipGroupStateCreated(shipGroupSeqId);
        }

        IOrderShipGroupStateMergePatched IOrderStateMergePatched.NewOrderShipGroupStateMergePatched(string shipGroupSeqId)
        {
            return NewOrderShipGroupStateMergePatched(shipGroupSeqId);
        }

        IOrderShipGroupStateRemoved IOrderStateMergePatched.NewOrderShipGroupStateRemoved(string shipGroupSeqId)
        {
            return NewOrderShipGroupStateRemoved(shipGroupSeqId);
        }


        OrderEventId IOrderEvent.OrderEventId
        {
            get { return this.OrderEventId; }
        }

        protected OrderStateEventDtoBase()
        {
        }

        protected OrderStateEventDtoBase(OrderEventId stateEventId)
        {
            this.OrderEventId = stateEventId;
        }

        // //////////////////////////////////////////////////

        string IEventDto.EventType 
        {
            get { return this.GetEventType(); }
        }

        protected abstract string GetEventType();

	}


    public class OrderStateCreatedOrMergePatchedOrDeletedDto : OrderStateEventDtoBase
    {
        private string _eventType;

        public virtual string EventType
        {
            get { return _eventType; }
            set { _eventType = value; }
        }

        protected override string GetEventType()
        {
            return this._eventType;
        }

    }



	public class OrderStateCreatedDto : OrderStateCreatedOrMergePatchedOrDeletedDto
	{
		public OrderStateCreatedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Created;
        }

	}


	public class OrderStateMergePatchedDto : OrderStateCreatedOrMergePatchedOrDeletedDto
	{
		public OrderStateMergePatchedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.MergePatched;
        }

	}


	public class OrderStateDeletedDto : OrderStateCreatedOrMergePatchedOrDeletedDto
	{
		public OrderStateDeletedDto()
		{
		}

        public override string EventType
        {
            get { return this.GetEventType(); }
            set
            {
                // do nothing
            }
        }

        protected override string GetEventType()
        {
            return Dddml.Wms.Specialization.StateEventType.Deleted;
        }

	}


    public partial class OrderStateCreatedOrMergePatchedOrDeletedDtos : IEnumerable<IOrderStateCreated>, IEnumerable<IOrderStateMergePatched>
    {
        private List<OrderStateCreatedOrMergePatchedOrDeletedDto> _innerStateEvents = new List<OrderStateCreatedOrMergePatchedOrDeletedDto>();

        public virtual OrderStateCreatedOrMergePatchedOrDeletedDto[] ToArray()
        {
            return _innerStateEvents.ToArray();
        }

        public virtual void Clear()
        {
            _innerStateEvents.Clear();
        }

        public virtual void AddRange(IEnumerable<OrderStateCreatedOrMergePatchedOrDeletedDto> es)
        {
            _innerStateEvents.AddRange(es);
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IOrderStateCreated> IEnumerable<IOrderStateCreated>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }

        IEnumerator<IOrderStateMergePatched> IEnumerable<IOrderStateMergePatched>.GetEnumerator()
        {
            return _innerStateEvents.GetEnumerator();
        }


        public void AddOrderEvent(IOrderStateCreated e)
        {
            _innerStateEvents.Add((OrderStateCreatedDto)e);
        }

        public void AddOrderEvent(IOrderEvent e)
        {
            _innerStateEvents.Add((OrderStateCreatedOrMergePatchedOrDeletedDto)e);
        }


    }


}

