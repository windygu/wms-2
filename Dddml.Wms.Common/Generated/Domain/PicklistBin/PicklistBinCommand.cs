// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistBinDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PicklistBin;

namespace Dddml.Wms.Domain.PicklistBin
{

	public abstract class PicklistBinCommandBase : IPicklistBinCommand
	{
		public virtual string PicklistBinId { get; set; }


		string IAggregateCommand<string, long>.AggregateId
		{
			get
			{
				return this.PicklistBinId;
			}
		}


		long IAggregateCommand<string, long>.AggregateVersion
		{
			get
			{
				return this.Version;
			}
		}

		public virtual long Version { get; set; }

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string PicklistId { get; set; }

		public virtual long? BinLocationNumber { get; set; }

		public virtual string PrimaryOrderId { get; set; }

		public virtual string PrimaryShipGroupSeqId { get; set; }

		public virtual bool? Active { get; set; }


		// //////////////////////////////////////////////////

        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();


	}


	public class CreatePicklistBin : PicklistBinCommandBase, ICreatePicklistBin
	{
		
		public CreatePicklistBin ()
		{
		}


        private CreatePicklistItemCommands _picklistItems = new CreatePicklistItemCommands();

        public ICreatePicklistItemCommands PicklistItems
        {
            get
            {
                return this._picklistItems;
            }
        }

        public CreatePicklistItem NewCreatePicklistItem()
        {
            var c = new CreatePicklistItem();
            c.PicklistBinId = this.PicklistBinId;

            return c;
        }

        ICreatePicklistItem ICreatePicklistBin.NewCreatePicklistItem()
        {
            return this.NewCreatePicklistItem();
        }



        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }
	}


	public class MergePatchPicklistBin :PicklistBinCommandBase, IMergePatchPicklistBin
	{

		public virtual bool IsPropertyPicklistIdRemoved { get; set; }

		public virtual bool IsPropertyBinLocationNumberRemoved { get; set; }

		public virtual bool IsPropertyPrimaryOrderIdRemoved { get; set; }

		public virtual bool IsPropertyPrimaryShipGroupSeqIdRemoved { get; set; }

		public virtual bool IsPropertyActiveRemoved { get; set; }


		public MergePatchPicklistBin ()
		{
		}

        private PicklistItemCommands _picklistItemCommands = new PicklistItemCommands();

        public IPicklistItemCommands PicklistItemCommands
        {
            get
            {
                return this._picklistItemCommands;
            }
        }


        public CreatePicklistItem NewCreatePicklistItem()
        {
            var c = new CreatePicklistItem();
            c.PicklistBinId = this.PicklistBinId;

            return c;
        }

        ICreatePicklistItem IMergePatchPicklistBin.NewCreatePicklistItem()
        {
            return this.NewCreatePicklistItem();
        }

        public MergePatchPicklistItem NewMergePatchPicklistItem()
        {
            var c = new MergePatchPicklistItem();
            c.PicklistBinId = this.PicklistBinId;

            return c;
        }

        IMergePatchPicklistItem IMergePatchPicklistBin.NewMergePatchPicklistItem()
        {
            return this.NewMergePatchPicklistItem();
        }


        public RemovePicklistItem NewRemovePicklistItem()
        {
            var c = new RemovePicklistItem();
            c.PicklistBinId = this.PicklistBinId;

            return c;
        }

        IRemovePicklistItem IMergePatchPicklistBin.NewRemovePicklistItem()
        {
            return this.NewRemovePicklistItem();
        }


        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class DeletePicklistBin : PicklistBinCommandBase, IDeletePicklistBin
	{
		public DeletePicklistBin ()
		{
		}

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Delete;
        }

	}


    public class CreatePicklistItemCommands : ICreatePicklistItemCommands
    {
        private List<ICreatePicklistItem> _innerCommands = new List<ICreatePicklistItem>();

        public void Add(ICreatePicklistItem c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(ICreatePicklistItem c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<ICreatePicklistItem> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public class PicklistItemCommands : IPicklistItemCommands
    {
        private List<IPicklistItemCommand> _innerCommands = new List<IPicklistItemCommand>();

        public void Add(IPicklistItemCommand c)
        {
            _innerCommands.Add(c);
        }

        public void Remove(IPicklistItemCommand c)
        {
            _innerCommands.Remove(c);
        }

        public void Clear()
        {
            _innerCommands.Clear();
        }

        public IEnumerator<IPicklistItemCommand> GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

    public static partial class PicklistBinCommands
    {
    }

}
