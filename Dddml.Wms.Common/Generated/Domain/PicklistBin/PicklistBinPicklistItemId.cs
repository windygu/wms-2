// <autogenerated>
//   This file was generated by T4 code generator GeneratePicklistBinDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.PicklistBin;

namespace Dddml.Wms.Domain.PicklistBin
{

	public class PicklistBinPicklistItemId
	{

		private string _picklistBinId;

		public virtual string PicklistBinId { 
			get { return this._picklistBinId; } 
			set { _picklistBinId = value; } 
		}

		private PicklistItemOrderShipGrpInvId _picklistItemOrderShipGrpInvId = new PicklistItemOrderShipGrpInvId();

		public virtual PicklistItemOrderShipGrpInvId PicklistItemOrderShipGrpInvId { 
			get { return this._picklistItemOrderShipGrpInvId; } 
			set { _picklistItemOrderShipGrpInvId = value; } 
		}


        #region  Flattened Properties


		protected internal virtual string PicklistItemOrderShipGrpInvIdOrderId {
			get { return PicklistItemOrderShipGrpInvId.OrderId; }
			set { PicklistItemOrderShipGrpInvId.OrderId = value; }
		}

		protected internal virtual string PicklistItemOrderShipGrpInvIdOrderItemSeqId {
			get { return PicklistItemOrderShipGrpInvId.OrderItemSeqId; }
			set { PicklistItemOrderShipGrpInvId.OrderItemSeqId = value; }
		}

		protected internal virtual string PicklistItemOrderShipGrpInvIdShipGroupSeqId {
			get { return PicklistItemOrderShipGrpInvId.ShipGroupSeqId; }
			set { PicklistItemOrderShipGrpInvId.ShipGroupSeqId = value; }
		}

		protected internal virtual string PicklistItemOrderShipGrpInvIdProductId {
			get { return PicklistItemOrderShipGrpInvId.ProductId; }
			set { PicklistItemOrderShipGrpInvId.ProductId = value; }
		}

		protected internal virtual string PicklistItemOrderShipGrpInvIdLocatorId {
			get { return PicklistItemOrderShipGrpInvId.LocatorId; }
			set { PicklistItemOrderShipGrpInvId.LocatorId = value; }
		}

		protected internal virtual string PicklistItemOrderShipGrpInvIdAttributeSetInstanceId {
			get { return PicklistItemOrderShipGrpInvId.AttributeSetInstanceId; }
			set { PicklistItemOrderShipGrpInvId.AttributeSetInstanceId = value; }
		}

        #endregion

		public PicklistBinPicklistItemId ()
		{
		}

		public PicklistBinPicklistItemId (string picklistBinId, PicklistItemOrderShipGrpInvId picklistItemOrderShipGrpInvId)
		{
			this._picklistBinId = picklistBinId;
			this._picklistItemOrderShipGrpInvId = picklistItemOrderShipGrpInvId;

		}


		public override bool Equals (object obj)
		{
			if (Object.ReferenceEquals (this, obj)) {
				return true;
			}

			PicklistBinPicklistItemId other = obj as PicklistBinPicklistItemId;
			if (other == null) {
				return false;
			}

			return true 
				&& Object.Equals (this.PicklistBinId, other.PicklistBinId)
				&& Object.Equals (this.PicklistItemOrderShipGrpInvId, other.PicklistItemOrderShipGrpInvId)
				;
		}

		public override int GetHashCode ()
		{
			int hash = 0;
			if (this.PicklistBinId != null) {
				hash += 13 * this.PicklistBinId.GetHashCode ();
			}
			if (this.PicklistItemOrderShipGrpInvId != null) {
				hash += 13 * this.PicklistItemOrderShipGrpInvId.GetHashCode ();
			}
			return hash;
		}

        public static bool operator ==(PicklistBinPicklistItemId obj1, PicklistBinPicklistItemId obj2)
        {
            return Object.Equals(obj1, obj2);
        }

        public static bool operator !=(PicklistBinPicklistItemId obj1, PicklistBinPicklistItemId obj2)
        {
            return !Object.Equals(obj1, obj2);
        }

        public override string ToString()
        {
            return String.Empty
                + "PicklistBinId: " + this.PicklistBinId + ", "
                + "PicklistItemOrderShipGrpInvId: " + this.PicklistItemOrderShipGrpInvId + ", "
                ;
        }

        protected internal static readonly string[] FlattenedPropertyNames = new string[] { "PicklistBinId", "PicklistItemOrderShipGrpInvIdOrderId", "PicklistItemOrderShipGrpInvIdOrderItemSeqId", "PicklistItemOrderShipGrpInvIdShipGroupSeqId", "PicklistItemOrderShipGrpInvIdProductId", "PicklistItemOrderShipGrpInvIdLocatorId", "PicklistItemOrderShipGrpInvIdAttributeSetInstanceId" };

        protected internal static readonly Type[] FlattenedPropertyTypes = new Type[] { typeof(string), typeof(string), typeof(string), typeof(string), typeof(string), typeof(string), typeof(string) };

        protected internal static readonly IDictionary<string, Type> FlattenedPropertyTypeDictionary;

        static PicklistBinPicklistItemId()
        {
            var dict = new Dictionary<string, Type>();
            for (int i = 0; i < FlattenedPropertyNames.Length; i++)
            {
                dict.Add(FlattenedPropertyNames[i], FlattenedPropertyTypes[i]);
            }
            FlattenedPropertyTypeDictionary = dict;
        }

        protected internal void ForEachFlattenedProperty(Action<string, object> act)
        {
            for (int i = 0; i < FlattenedPropertyNames.Length; i++)
            {
                string pn = FlattenedPropertyNames[i];
                if (Char.IsLower(pn[0])) { pn = Char.ToUpper(pn[0]) + pn.Substring(1); }
                var m = this.GetType().GetProperty(pn, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);
                object pv = m.GetValue(this);
                act(pn, pv);
            }
        }

        protected internal void SetFlattenedPropertyValues(params object[] values)
        {
            for (int i = 0; i < FlattenedPropertyNames.Length; i++)
            {
                string pn = FlattenedPropertyNames[i];
                if (Char.IsLower(pn[0])) { pn = Char.ToUpper(pn[0]) + pn.Substring(1); }
                var v = values[i];
                var m = this.GetType().GetProperty(pn, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);
                m.SetValue(this, v);
            }
        }
	}

}


