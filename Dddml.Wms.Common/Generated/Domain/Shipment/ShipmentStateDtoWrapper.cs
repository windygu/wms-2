// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public partial class ShipmentStateDtoWrapper : StateDtoWrapperBase, IShipmentStateDto, IShipmentState
	{

        internal static IList<string> _collectionFieldNames = new string[] { "ShipmentImages", "ShipmentItems", "ShipmentReceipts", "ItemIssuances" };

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(_collectionFieldNames, fieldName);
        }

		private IShipmentState _state;

        public ShipmentStateDtoWrapper()
        {
            this._state = new ShipmentState();
        }

		public ShipmentStateDtoWrapper(IShipmentState state)
		{
            this._state = state;
		}

		public IShipmentState ToShipmentState()
		{
			return this._state;
		}

		public virtual string ShipmentId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentId"))
                {
                    return _state.ShipmentId;
                }
                return null;
            }
            set
            {
                _state.ShipmentId = value;
            }
        }

        string IShipmentStateProperties.ShipmentId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).ShipmentId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).ShipmentId = value;
            }
        }

		public virtual string ShipmentTypeId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentTypeId"))
                {
                    return _state.ShipmentTypeId;
                }
                return null;
            }
            set
            {
                _state.ShipmentTypeId = value;
            }
        }

        string IShipmentStateProperties.ShipmentTypeId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).ShipmentTypeId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).ShipmentTypeId = value;
            }
        }

		public virtual string StatusId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("StatusId"))
                {
                    return _state.StatusId;
                }
                return null;
            }
            set
            {
                _state.StatusId = value;
            }
        }

        string IShipmentStateProperties.StatusId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).StatusId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).StatusId = value;
            }
        }

		public virtual string PrimaryOrderId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PrimaryOrderId"))
                {
                    return _state.PrimaryOrderId;
                }
                return null;
            }
            set
            {
                _state.PrimaryOrderId = value;
            }
        }

        string IShipmentStateProperties.PrimaryOrderId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).PrimaryOrderId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).PrimaryOrderId = value;
            }
        }

		public virtual string PrimaryReturnId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PrimaryReturnId"))
                {
                    return _state.PrimaryReturnId;
                }
                return null;
            }
            set
            {
                _state.PrimaryReturnId = value;
            }
        }

        string IShipmentStateProperties.PrimaryReturnId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).PrimaryReturnId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).PrimaryReturnId = value;
            }
        }

		public virtual string PrimaryShipGroupSeqId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PrimaryShipGroupSeqId"))
                {
                    return _state.PrimaryShipGroupSeqId;
                }
                return null;
            }
            set
            {
                _state.PrimaryShipGroupSeqId = value;
            }
        }

        string IShipmentStateProperties.PrimaryShipGroupSeqId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).PrimaryShipGroupSeqId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).PrimaryShipGroupSeqId = value;
            }
        }

		public virtual bool? OnlyOneOrder
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("OnlyOneOrder"))
                {
                    return _state.OnlyOneOrder;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.OnlyOneOrder = value.Value;
                }
            }
        }

        bool IShipmentStateProperties.OnlyOneOrder
        {
            get 
            {
                return (this._state as IShipmentStateProperties).OnlyOneOrder;
            }
            set 
            {
                (this._state as IShipmentStateProperties).OnlyOneOrder = value;
            }
        }

		public virtual string PicklistBinId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PicklistBinId"))
                {
                    return _state.PicklistBinId;
                }
                return null;
            }
            set
            {
                _state.PicklistBinId = value;
            }
        }

        string IShipmentStateProperties.PicklistBinId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).PicklistBinId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).PicklistBinId = value;
            }
        }

		public virtual string BolNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("BolNumber"))
                {
                    return _state.BolNumber;
                }
                return null;
            }
            set
            {
                _state.BolNumber = value;
            }
        }

        string IShipmentStateProperties.BolNumber
        {
            get 
            {
                return (this._state as IShipmentStateProperties).BolNumber;
            }
            set 
            {
                (this._state as IShipmentStateProperties).BolNumber = value;
            }
        }

		public virtual string SealNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("SealNumber"))
                {
                    return _state.SealNumber;
                }
                return null;
            }
            set
            {
                _state.SealNumber = value;
            }
        }

        string IShipmentStateProperties.SealNumber
        {
            get 
            {
                return (this._state as IShipmentStateProperties).SealNumber;
            }
            set 
            {
                (this._state as IShipmentStateProperties).SealNumber = value;
            }
        }

		public virtual string VehicleId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("VehicleId"))
                {
                    return _state.VehicleId;
                }
                return null;
            }
            set
            {
                _state.VehicleId = value;
            }
        }

        string IShipmentStateProperties.VehicleId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).VehicleId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).VehicleId = value;
            }
        }

		public virtual string ExternalOrderNumber
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("ExternalOrderNumber"))
                {
                    return _state.ExternalOrderNumber;
                }
                return null;
            }
            set
            {
                _state.ExternalOrderNumber = value;
            }
        }

        string IShipmentStateProperties.ExternalOrderNumber
        {
            get 
            {
                return (this._state as IShipmentStateProperties).ExternalOrderNumber;
            }
            set 
            {
                (this._state as IShipmentStateProperties).ExternalOrderNumber = value;
            }
        }

		public virtual string Carrier
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Carrier"))
                {
                    return _state.Carrier;
                }
                return null;
            }
            set
            {
                _state.Carrier = value;
            }
        }

        string IShipmentStateProperties.Carrier
        {
            get 
            {
                return (this._state as IShipmentStateProperties).Carrier;
            }
            set 
            {
                (this._state as IShipmentStateProperties).Carrier = value;
            }
        }

		public virtual DateTime? DateShipped
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DateShipped"))
                {
                    return _state.DateShipped;
                }
                return null;
            }
            set
            {
                _state.DateShipped = value;
            }
        }

        DateTime? IShipmentStateProperties.DateShipped
        {
            get 
            {
                return (this._state as IShipmentStateProperties).DateShipped;
            }
            set 
            {
                (this._state as IShipmentStateProperties).DateShipped = value;
            }
        }

		public virtual DateTime? EstimatedReadyDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EstimatedReadyDate"))
                {
                    return _state.EstimatedReadyDate;
                }
                return null;
            }
            set
            {
                _state.EstimatedReadyDate = value;
            }
        }

        DateTime? IShipmentStateProperties.EstimatedReadyDate
        {
            get 
            {
                return (this._state as IShipmentStateProperties).EstimatedReadyDate;
            }
            set 
            {
                (this._state as IShipmentStateProperties).EstimatedReadyDate = value;
            }
        }

		public virtual DateTime? EstimatedShipDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EstimatedShipDate"))
                {
                    return _state.EstimatedShipDate;
                }
                return null;
            }
            set
            {
                _state.EstimatedShipDate = value;
            }
        }

        DateTime? IShipmentStateProperties.EstimatedShipDate
        {
            get 
            {
                return (this._state as IShipmentStateProperties).EstimatedShipDate;
            }
            set 
            {
                (this._state as IShipmentStateProperties).EstimatedShipDate = value;
            }
        }

		public virtual string EstimatedShipWorkEffId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EstimatedShipWorkEffId"))
                {
                    return _state.EstimatedShipWorkEffId;
                }
                return null;
            }
            set
            {
                _state.EstimatedShipWorkEffId = value;
            }
        }

        string IShipmentStateProperties.EstimatedShipWorkEffId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).EstimatedShipWorkEffId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).EstimatedShipWorkEffId = value;
            }
        }

		public virtual DateTime? EstimatedArrivalDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EstimatedArrivalDate"))
                {
                    return _state.EstimatedArrivalDate;
                }
                return null;
            }
            set
            {
                _state.EstimatedArrivalDate = value;
            }
        }

        DateTime? IShipmentStateProperties.EstimatedArrivalDate
        {
            get 
            {
                return (this._state as IShipmentStateProperties).EstimatedArrivalDate;
            }
            set 
            {
                (this._state as IShipmentStateProperties).EstimatedArrivalDate = value;
            }
        }

		public virtual string EstimatedArrivalWorkEffId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EstimatedArrivalWorkEffId"))
                {
                    return _state.EstimatedArrivalWorkEffId;
                }
                return null;
            }
            set
            {
                _state.EstimatedArrivalWorkEffId = value;
            }
        }

        string IShipmentStateProperties.EstimatedArrivalWorkEffId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).EstimatedArrivalWorkEffId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).EstimatedArrivalWorkEffId = value;
            }
        }

		public virtual DateTime? LatestCancelDate
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("LatestCancelDate"))
                {
                    return _state.LatestCancelDate;
                }
                return null;
            }
            set
            {
                _state.LatestCancelDate = value;
            }
        }

        DateTime? IShipmentStateProperties.LatestCancelDate
        {
            get 
            {
                return (this._state as IShipmentStateProperties).LatestCancelDate;
            }
            set 
            {
                (this._state as IShipmentStateProperties).LatestCancelDate = value;
            }
        }

		public virtual decimal? EstimatedShipCost
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("EstimatedShipCost"))
                {
                    return _state.EstimatedShipCost;
                }
                return null;
            }
            set
            {
                _state.EstimatedShipCost = value;
            }
        }

        decimal? IShipmentStateProperties.EstimatedShipCost
        {
            get 
            {
                return (this._state as IShipmentStateProperties).EstimatedShipCost;
            }
            set 
            {
                (this._state as IShipmentStateProperties).EstimatedShipCost = value;
            }
        }

		public virtual string CurrencyUomId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CurrencyUomId"))
                {
                    return _state.CurrencyUomId;
                }
                return null;
            }
            set
            {
                _state.CurrencyUomId = value;
            }
        }

        string IShipmentStateProperties.CurrencyUomId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).CurrencyUomId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).CurrencyUomId = value;
            }
        }

		public virtual string HandlingInstructions
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("HandlingInstructions"))
                {
                    return _state.HandlingInstructions;
                }
                return null;
            }
            set
            {
                _state.HandlingInstructions = value;
            }
        }

        string IShipmentStateProperties.HandlingInstructions
        {
            get 
            {
                return (this._state as IShipmentStateProperties).HandlingInstructions;
            }
            set 
            {
                (this._state as IShipmentStateProperties).HandlingInstructions = value;
            }
        }

		public virtual string OriginFacilityId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("OriginFacilityId"))
                {
                    return _state.OriginFacilityId;
                }
                return null;
            }
            set
            {
                _state.OriginFacilityId = value;
            }
        }

        string IShipmentStateProperties.OriginFacilityId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).OriginFacilityId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).OriginFacilityId = value;
            }
        }

		public virtual string DestinationFacilityId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DestinationFacilityId"))
                {
                    return _state.DestinationFacilityId;
                }
                return null;
            }
            set
            {
                _state.DestinationFacilityId = value;
            }
        }

        string IShipmentStateProperties.DestinationFacilityId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).DestinationFacilityId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).DestinationFacilityId = value;
            }
        }

		public virtual string OriginContactMechId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("OriginContactMechId"))
                {
                    return _state.OriginContactMechId;
                }
                return null;
            }
            set
            {
                _state.OriginContactMechId = value;
            }
        }

        string IShipmentStateProperties.OriginContactMechId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).OriginContactMechId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).OriginContactMechId = value;
            }
        }

		public virtual string OriginTelecomNumberId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("OriginTelecomNumberId"))
                {
                    return _state.OriginTelecomNumberId;
                }
                return null;
            }
            set
            {
                _state.OriginTelecomNumberId = value;
            }
        }

        string IShipmentStateProperties.OriginTelecomNumberId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).OriginTelecomNumberId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).OriginTelecomNumberId = value;
            }
        }

		public virtual string DestinationContactMechId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DestinationContactMechId"))
                {
                    return _state.DestinationContactMechId;
                }
                return null;
            }
            set
            {
                _state.DestinationContactMechId = value;
            }
        }

        string IShipmentStateProperties.DestinationContactMechId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).DestinationContactMechId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).DestinationContactMechId = value;
            }
        }

		public virtual string DestinationTelecomNumberId
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("DestinationTelecomNumberId"))
                {
                    return _state.DestinationTelecomNumberId;
                }
                return null;
            }
            set
            {
                _state.DestinationTelecomNumberId = value;
            }
        }

        string IShipmentStateProperties.DestinationTelecomNumberId
        {
            get 
            {
                return (this._state as IShipmentStateProperties).DestinationTelecomNumberId;
            }
            set 
            {
                (this._state as IShipmentStateProperties).DestinationTelecomNumberId = value;
            }
        }

		public virtual string PartyIdTo
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PartyIdTo"))
                {
                    return _state.PartyIdTo;
                }
                return null;
            }
            set
            {
                _state.PartyIdTo = value;
            }
        }

        string IShipmentStateProperties.PartyIdTo
        {
            get 
            {
                return (this._state as IShipmentStateProperties).PartyIdTo;
            }
            set 
            {
                (this._state as IShipmentStateProperties).PartyIdTo = value;
            }
        }

		public virtual string PartyIdFrom
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("PartyIdFrom"))
                {
                    return _state.PartyIdFrom;
                }
                return null;
            }
            set
            {
                _state.PartyIdFrom = value;
            }
        }

        string IShipmentStateProperties.PartyIdFrom
        {
            get 
            {
                return (this._state as IShipmentStateProperties).PartyIdFrom;
            }
            set 
            {
                (this._state as IShipmentStateProperties).PartyIdFrom = value;
            }
        }

		public virtual decimal? AdditionalShippingCharge
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AdditionalShippingCharge"))
                {
                    return _state.AdditionalShippingCharge;
                }
                return null;
            }
            set
            {
                _state.AdditionalShippingCharge = value;
            }
        }

        decimal? IShipmentStateProperties.AdditionalShippingCharge
        {
            get 
            {
                return (this._state as IShipmentStateProperties).AdditionalShippingCharge;
            }
            set 
            {
                (this._state as IShipmentStateProperties).AdditionalShippingCharge = value;
            }
        }

		public virtual string AddtlShippingChargeDesc
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("AddtlShippingChargeDesc"))
                {
                    return _state.AddtlShippingChargeDesc;
                }
                return null;
            }
            set
            {
                _state.AddtlShippingChargeDesc = value;
            }
        }

        string IShipmentStateProperties.AddtlShippingChargeDesc
        {
            get 
            {
                return (this._state as IShipmentStateProperties).AddtlShippingChargeDesc;
            }
            set 
            {
                (this._state as IShipmentStateProperties).AddtlShippingChargeDesc = value;
            }
        }

		public virtual bool? Active
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Active"))
                {
                    return (this._state as IShipmentStateProperties).Active;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IShipmentStateProperties).Active = value.Value;
                }
            }
        }

        bool IShipmentStateProperties.Active
        {
            get 
            {
                return (this._state as IShipmentStateProperties).Active;
            }
            set 
            {
                (this._state as IShipmentStateProperties).Active = value;
            }
        }

		public virtual long? Version
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("Version"))
                {
                    return (this._state as IShipmentStateProperties).Version;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    (this._state as IShipmentStateProperties).Version = value.Value;
                }
            }
        }

        long IShipmentStateProperties.Version
        {
            get 
            {
                return (this._state as IShipmentStateProperties).Version;
            }
            set 
            {
                (this._state as IShipmentStateProperties).Version = value;
            }
        }

		public virtual string CreatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedBy"))
                {
                    return _state.CreatedBy;
                }
                return null;
            }
            set
            {
                _state.CreatedBy = value;
            }
        }

		public virtual DateTime? CreatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("CreatedAt"))
                {
                    return _state.CreatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.CreatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.CreatedAt = value.Value;
                }
            }
        }

		public virtual string UpdatedBy
		{
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedBy"))
                {
                    return _state.UpdatedBy;
                }
                return null;
            }
            set
            {
                _state.UpdatedBy = value;
            }
        }

		public virtual DateTime? UpdatedAt
        {
            get
            {
                if ((this as IStateDtoWrapper).ReturnedFieldsContains("UpdatedAt"))
                {
                    return _state.UpdatedAt.Date < default(DateTime).Date.AddDays(1) ? (DateTime?)null : _state.UpdatedAt;
                }
                return null;
            }
            set
            {
                if (value != null && value.HasValue)
                {
                    _state.UpdatedAt = value.Value;
                }
            }
        }

		#region IIdentity implementation

		string IGlobalIdentity<string>.GlobalId
		{
			get { return (_state as IShipmentState).GlobalId; }
		}

		#endregion

		#region IActive implementation

		bool IActive.IsActive()
		{
            return (_state as IActive).IsActive();
		}

		#endregion

		#region ICreated implementation

		string ICreated<string>.CreatedBy
		{
            get { return (_state as IShipmentState).CreatedBy; }
            set { (_state as IShipmentState).CreatedBy = value; }
		}

		DateTime ICreated<string>.CreatedAt
		{
            get { return (_state as IShipmentState).CreatedAt; }
            set { (_state as IShipmentState).CreatedAt = value; }
		}

		#endregion

		#region IUpdated implementation

		string IUpdated<string>.UpdatedBy
		{
            get { return (_state as IShipmentState).UpdatedBy; }
            set { (_state as IShipmentState).UpdatedBy = value; }
		}

		DateTime IUpdated<string>.UpdatedAt
		{
            get { return (_state as IShipmentState).UpdatedAt; }
            set { (_state as IShipmentState).UpdatedAt = value; }
		}

		#endregion

		#region IVersioned implementation

		long IAggregateVersioned<long>.AggregateVersion
		{
            get { return (_state as IShipmentStateProperties).Version; }
		}

		#endregion

        bool IShipmentState.IsUnsaved
        {
            get { return this.Version == ShipmentState.VersionZero; }
        }

        public virtual IShipmentImageStateDto[] ShipmentImages
        {
            get 
            {
                if (!(this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentImages"))
                {
                    return null;
                }
                var dtos = new List<IShipmentImageStateDto>();
                if (this._state.ShipmentImages != null)
                {
                    foreach (var s in this._state.ShipmentImages)
                    {
                        var dto = new ShipmentImageStateDtoWrapper((ShipmentImageState)s);
                        var returnFS = CollectionUtils.DictionaryGetValueIgnoringCase(ReturnedFields, "ShipmentImages");
                        if (!String.IsNullOrWhiteSpace(returnFS))
                        {
                            (dto as IStateDtoWrapper).ReturnedFieldsString = returnFS;
                        }
                        else
                        {
                            (dto as IStateDtoWrapper).AllFieldsReturned = this.AllFieldsReturned;
                        }
                        dtos.Add(dto);
                    }
                }
                return dtos.ToArray();
            }
            set 
            {
                if (value == null) { value = new ShipmentImageStateDtoWrapper[0]; }
                var states = new List<IShipmentImageState>();
                foreach (var s in value)
                {
                    states.Add(s.ToShipmentImageState());
                }
                this._state.ShipmentImages = new DtoShipmentImageStates(this._state, states);
            }
        }

        IShipmentImageStates IShipmentState.ShipmentImages
        {
            get { return _state.ShipmentImages; }
            set { _state.ShipmentImages = value; }
        }

        public virtual IShipmentItemStateDto[] ShipmentItems
        {
            get 
            {
                if (!(this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentItems"))
                {
                    return null;
                }
                var dtos = new List<IShipmentItemStateDto>();
                if (this._state.ShipmentItems != null)
                {
                    foreach (var s in this._state.ShipmentItems)
                    {
                        var dto = new ShipmentItemStateDtoWrapper((ShipmentItemState)s);
                        var returnFS = CollectionUtils.DictionaryGetValueIgnoringCase(ReturnedFields, "ShipmentItems");
                        if (!String.IsNullOrWhiteSpace(returnFS))
                        {
                            (dto as IStateDtoWrapper).ReturnedFieldsString = returnFS;
                        }
                        else
                        {
                            (dto as IStateDtoWrapper).AllFieldsReturned = this.AllFieldsReturned;
                        }
                        dtos.Add(dto);
                    }
                }
                return dtos.ToArray();
            }
            set 
            {
                if (value == null) { value = new ShipmentItemStateDtoWrapper[0]; }
                var states = new List<IShipmentItemState>();
                foreach (var s in value)
                {
                    states.Add(s.ToShipmentItemState());
                }
                this._state.ShipmentItems = new DtoShipmentItemStates(this._state, states);
            }
        }

        IShipmentItemStates IShipmentState.ShipmentItems
        {
            get { return _state.ShipmentItems; }
            set { _state.ShipmentItems = value; }
        }

        public virtual IShipmentReceiptStateDto[] ShipmentReceipts
        {
            get 
            {
                if (!(this as IStateDtoWrapper).ReturnedFieldsContains("ShipmentReceipts"))
                {
                    return null;
                }
                var dtos = new List<IShipmentReceiptStateDto>();
                if (this._state.ShipmentReceipts != null)
                {
                    foreach (var s in this._state.ShipmentReceipts)
                    {
                        var dto = new ShipmentReceiptStateDtoWrapper((ShipmentReceiptState)s);
                        var returnFS = CollectionUtils.DictionaryGetValueIgnoringCase(ReturnedFields, "ShipmentReceipts");
                        if (!String.IsNullOrWhiteSpace(returnFS))
                        {
                            (dto as IStateDtoWrapper).ReturnedFieldsString = returnFS;
                        }
                        else
                        {
                            (dto as IStateDtoWrapper).AllFieldsReturned = this.AllFieldsReturned;
                        }
                        dtos.Add(dto);
                    }
                }
                return dtos.ToArray();
            }
            set 
            {
                if (value == null) { value = new ShipmentReceiptStateDtoWrapper[0]; }
                var states = new List<IShipmentReceiptState>();
                foreach (var s in value)
                {
                    states.Add(s.ToShipmentReceiptState());
                }
                this._state.ShipmentReceipts = new DtoShipmentReceiptStates(this._state, states);
            }
        }

        IShipmentReceiptStates IShipmentState.ShipmentReceipts
        {
            get { return _state.ShipmentReceipts; }
            set { _state.ShipmentReceipts = value; }
        }

        public virtual IItemIssuanceStateDto[] ItemIssuances
        {
            get 
            {
                if (!(this as IStateDtoWrapper).ReturnedFieldsContains("ItemIssuances"))
                {
                    return null;
                }
                var dtos = new List<IItemIssuanceStateDto>();
                if (this._state.ItemIssuances != null)
                {
                    foreach (var s in this._state.ItemIssuances)
                    {
                        var dto = new ItemIssuanceStateDtoWrapper((ItemIssuanceState)s);
                        var returnFS = CollectionUtils.DictionaryGetValueIgnoringCase(ReturnedFields, "ItemIssuances");
                        if (!String.IsNullOrWhiteSpace(returnFS))
                        {
                            (dto as IStateDtoWrapper).ReturnedFieldsString = returnFS;
                        }
                        else
                        {
                            (dto as IStateDtoWrapper).AllFieldsReturned = this.AllFieldsReturned;
                        }
                        dtos.Add(dto);
                    }
                }
                return dtos.ToArray();
            }
            set 
            {
                if (value == null) { value = new ItemIssuanceStateDtoWrapper[0]; }
                var states = new List<IItemIssuanceState>();
                foreach (var s in value)
                {
                    states.Add(s.ToItemIssuanceState());
                }
                this._state.ItemIssuances = new DtoItemIssuanceStates(this._state, states);
            }
        }

        IItemIssuanceStates IShipmentState.ItemIssuances
        {
            get { return _state.ItemIssuances; }
            set { _state.ItemIssuances = value; }
        }

		void IShipmentState.When(IShipmentStateCreated e)
		{
            throw new NotSupportedException();
		}

		bool IShipmentState.ForReapplying
		{
            get { throw new NotSupportedException(); }
		}

        public bool StateReadOnly { get; set; }

        bool IState.ReadOnly
        {
            get { return this.StateReadOnly; }
            set { this.StateReadOnly = value; }
        }

		void IShipmentState.When(IShipmentStateMergePatched e)
		{
            throw new NotSupportedException();
		}

		void IShipmentState.Mutate(IEvent e)
		{
            throw new NotSupportedException();
		}

        // //////////////////////////////////////////////////////////////

        public class DtoShipmentImageStates : IShipmentImageStates
        {

            private IShipmentState _outerState;

            private IEnumerable<IShipmentImageState> _innerStates;

            public DtoShipmentImageStates(IShipmentState outerState, IEnumerable<IShipmentImageState> innerStates)
            {
                this._outerState = outerState;
                if (innerStates == null)
                {
                    this._innerStates = new IShipmentImageState[] { };
                }
                else
                {
                    this._innerStates = innerStates;
                }
            }

            public IEnumerator<IShipmentImageState> GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            public IShipmentImageState Get(string sequenceId)
            {
                throw new NotSupportedException();
            }

            public IShipmentImageState Get(string sequenceId, bool forCreation)
            {
                throw new NotSupportedException();
            }

            public IShipmentImageState Get(string sequenceId, bool forCreation, bool nullAllowed)
            {
                throw new NotSupportedException();
            }

            public void Remove(IShipmentImageState state)
            {
                throw new NotSupportedException();
            }

            public void AddToSave(IShipmentImageState state)
            {
                throw new NotSupportedException();
            }

            public void Save()
            {
                throw new NotSupportedException();
            }
        }

        public class DtoShipmentItemStates : IShipmentItemStates
        {

            private IShipmentState _outerState;

            private IEnumerable<IShipmentItemState> _innerStates;

            public DtoShipmentItemStates(IShipmentState outerState, IEnumerable<IShipmentItemState> innerStates)
            {
                this._outerState = outerState;
                if (innerStates == null)
                {
                    this._innerStates = new IShipmentItemState[] { };
                }
                else
                {
                    this._innerStates = innerStates;
                }
            }

            public IEnumerator<IShipmentItemState> GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            public IShipmentItemState Get(string shipmentItemSeqId)
            {
                throw new NotSupportedException();
            }

            public IShipmentItemState Get(string shipmentItemSeqId, bool forCreation)
            {
                throw new NotSupportedException();
            }

            public IShipmentItemState Get(string shipmentItemSeqId, bool forCreation, bool nullAllowed)
            {
                throw new NotSupportedException();
            }

            public void Remove(IShipmentItemState state)
            {
                throw new NotSupportedException();
            }

            public void AddToSave(IShipmentItemState state)
            {
                throw new NotSupportedException();
            }

            public void Save()
            {
                throw new NotSupportedException();
            }
        }

        public class DtoShipmentReceiptStates : IShipmentReceiptStates
        {

            private IShipmentState _outerState;

            private IEnumerable<IShipmentReceiptState> _innerStates;

            public DtoShipmentReceiptStates(IShipmentState outerState, IEnumerable<IShipmentReceiptState> innerStates)
            {
                this._outerState = outerState;
                if (innerStates == null)
                {
                    this._innerStates = new IShipmentReceiptState[] { };
                }
                else
                {
                    this._innerStates = innerStates;
                }
            }

            public IEnumerator<IShipmentReceiptState> GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            public IShipmentReceiptState Get(string receiptSeqId)
            {
                throw new NotSupportedException();
            }

            public IShipmentReceiptState Get(string receiptSeqId, bool forCreation)
            {
                throw new NotSupportedException();
            }

            public IShipmentReceiptState Get(string receiptSeqId, bool forCreation, bool nullAllowed)
            {
                throw new NotSupportedException();
            }

            public void Remove(IShipmentReceiptState state)
            {
                throw new NotSupportedException();
            }

            public void AddToSave(IShipmentReceiptState state)
            {
                throw new NotSupportedException();
            }

            public void Save()
            {
                throw new NotSupportedException();
            }
        }

        public class DtoItemIssuanceStates : IItemIssuanceStates
        {

            private IShipmentState _outerState;

            private IEnumerable<IItemIssuanceState> _innerStates;

            public DtoItemIssuanceStates(IShipmentState outerState, IEnumerable<IItemIssuanceState> innerStates)
            {
                this._outerState = outerState;
                if (innerStates == null)
                {
                    this._innerStates = new IItemIssuanceState[] { };
                }
                else
                {
                    this._innerStates = innerStates;
                }
            }

            public IEnumerator<IItemIssuanceState> GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
            {
                return _innerStates.GetEnumerator();
            }

            public IItemIssuanceState Get(string itemIssuanceSeqId)
            {
                throw new NotSupportedException();
            }

            public IItemIssuanceState Get(string itemIssuanceSeqId, bool forCreation)
            {
                throw new NotSupportedException();
            }

            public IItemIssuanceState Get(string itemIssuanceSeqId, bool forCreation, bool nullAllowed)
            {
                throw new NotSupportedException();
            }

            public void Remove(IItemIssuanceState state)
            {
                throw new NotSupportedException();
            }

            public void AddToSave(IItemIssuanceState state)
            {
                throw new NotSupportedException();
            }

            public void Save()
            {
                throw new NotSupportedException();
            }
        }

	}

    partial class ShipmentStateDtoWrapperCollection : StateDtoWrapperCollectionBase<ShipmentStateDtoWrapper>
    {

        protected override bool IsCollectionField(string fieldName)
        {
            return CollectionUtils.CollectionContainsIgnoringCase(ShipmentStateDtoWrapper._collectionFieldNames, fieldName);
        }

    }

}

