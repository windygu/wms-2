// <autogenerated>
//   This file was generated by T4 code generator GenerateShipmentDomain.tt.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

using System;
using System.Linq;
using System.Collections.Generic;
using Dddml.Wms.Specialization;
using Dddml.Wms.Domain;
using Dddml.Wms.Domain.Shipment;

namespace Dddml.Wms.Domain.Shipment
{

	public abstract class ItemIssuanceCommandDtoBase : ICommandDto, ICreateItemIssuance, IMergePatchItemIssuance, IRemoveItemIssuance
	{

		public virtual string RequesterId { get; set; }

		public virtual string CommandId { get; set; }

        object ICommand.RequesterId
        {
            get { return this.RequesterId; }
            set { this.RequesterId = (string)value; }
        }

        string ICommand.CommandId
        {
            get { return this.CommandId; }
            set { this.CommandId = value; }
        }

		public virtual string ItemIssuanceSeqId { get; set; }

		public virtual string OrderId { get; set; }

		public virtual string OrderItemSeqId { get; set; }

		public virtual string ShipGroupSeqId { get; set; }

		public virtual string ProductId { get; set; }

		public virtual string LocatorId { get; set; }

		public virtual string AttributeSetInstanceId { get; set; }

		public virtual string ShipmentItemSeqId { get; set; }

		public virtual string FixedAssetId { get; set; }

		public virtual string MaintHistSeqId { get; set; }

		public virtual DateTime? IssuedDateTime { get; set; }

		public virtual string IssuedByUserLoginId { get; set; }

		public virtual decimal? Quantity { get; set; }

		public virtual decimal? CancelQuantity { get; set; }

		public virtual bool? Active { get; set; }

		public virtual string ShipmentId { get; set; }

		public virtual bool? IsPropertyOrderIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyOrderIdRemoved
        {
            get
            {
                var b = this.IsPropertyOrderIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyOrderIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyOrderItemSeqIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyOrderItemSeqIdRemoved
        {
            get
            {
                var b = this.IsPropertyOrderItemSeqIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyOrderItemSeqIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyShipGroupSeqIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyShipGroupSeqIdRemoved
        {
            get
            {
                var b = this.IsPropertyShipGroupSeqIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyShipGroupSeqIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyProductIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyProductIdRemoved
        {
            get
            {
                var b = this.IsPropertyProductIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyProductIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyLocatorIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyLocatorIdRemoved
        {
            get
            {
                var b = this.IsPropertyLocatorIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyLocatorIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyAttributeSetInstanceIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyAttributeSetInstanceIdRemoved
        {
            get
            {
                var b = this.IsPropertyAttributeSetInstanceIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyAttributeSetInstanceIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyShipmentItemSeqIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyShipmentItemSeqIdRemoved
        {
            get
            {
                var b = this.IsPropertyShipmentItemSeqIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyShipmentItemSeqIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyFixedAssetIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyFixedAssetIdRemoved
        {
            get
            {
                var b = this.IsPropertyFixedAssetIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyFixedAssetIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyMaintHistSeqIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyMaintHistSeqIdRemoved
        {
            get
            {
                var b = this.IsPropertyMaintHistSeqIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyMaintHistSeqIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyIssuedDateTimeRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyIssuedDateTimeRemoved
        {
            get
            {
                var b = this.IsPropertyIssuedDateTimeRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyIssuedDateTimeRemoved = value;
            }
        }

		public virtual bool? IsPropertyIssuedByUserLoginIdRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyIssuedByUserLoginIdRemoved
        {
            get
            {
                var b = this.IsPropertyIssuedByUserLoginIdRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyIssuedByUserLoginIdRemoved = value;
            }
        }

		public virtual bool? IsPropertyQuantityRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyCancelQuantityRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyCancelQuantityRemoved
        {
            get
            {
                var b = this.IsPropertyCancelQuantityRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyCancelQuantityRemoved = value;
            }
        }

		public virtual bool? IsPropertyActiveRemoved { get; set; }

        bool IMergePatchItemIssuance.IsPropertyActiveRemoved
        {
            get
            {
                var b = this.IsPropertyActiveRemoved;
                if (b != null && b.HasValue)
                {
                    return b.Value;
                }
                return false;
            }
            set
            {
                this.IsPropertyActiveRemoved = value;
            }
        }


        string ICommandDto.CommandType 
        {
            get { return this.GetCommandType(); }
        }

        protected abstract string GetCommandType();

	}


    public class CreateOrMergePatchOrRemoveItemIssuanceDto : ItemIssuanceCommandDtoBase
    {
        private string _commandType;

        public virtual string CommandType
        {
            get { return _commandType; }
            set { _commandType = value; }
        }

        protected override string GetCommandType()
        {
            return this._commandType;
        }

    }



	public class CreateItemIssuanceDto : CreateOrMergePatchOrRemoveItemIssuanceDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Create;
        }

	}


	public class MergePatchItemIssuanceDto : CreateOrMergePatchOrRemoveItemIssuanceDto
	{

        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.MergePatch;
        }

	}

	public class RemoveItemIssuanceDto : CreateOrMergePatchOrRemoveItemIssuanceDto
	{
        protected override string GetCommandType()
        {
            return Dddml.Wms.Specialization.CommandType.Remove;
        }


        public override string CommandType
        {
            get { return this.GetCommandType(); }
            set { 
				// do nothing
            }
        }

	}


    public partial class CreateOrMergePatchOrRemoveItemIssuanceDtos : IItemIssuanceCommands, ICreateItemIssuanceCommands, IEnumerable<CreateOrMergePatchOrRemoveItemIssuanceDto>
    {
        private List<CreateOrMergePatchOrRemoveItemIssuanceDto> _innerCommands = new List<CreateOrMergePatchOrRemoveItemIssuanceDto>();

        public virtual CreateOrMergePatchOrRemoveItemIssuanceDto[] ToArray()
        {
            return _innerCommands.ToArray();
        }

        public virtual void Clear()
        {
            _innerCommands.Clear();
        }

        public virtual void AddRange(IEnumerable<CreateOrMergePatchOrRemoveItemIssuanceDto> cs)
        {
            _innerCommands.AddRange(cs);
        }

        void IItemIssuanceCommands.Add(IItemIssuanceCommand c)
        {
            _innerCommands.Add((CreateOrMergePatchOrRemoveItemIssuanceDto)c);
        }

        void IItemIssuanceCommands.Remove(IItemIssuanceCommand c)
        {
            _innerCommands.Remove((CreateOrMergePatchOrRemoveItemIssuanceDto)c);
        }


        IEnumerator<CreateOrMergePatchOrRemoveItemIssuanceDto> IEnumerable<CreateOrMergePatchOrRemoveItemIssuanceDto>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        IEnumerator<IItemIssuanceCommand> IEnumerable<IItemIssuanceCommand>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

        void ICreateItemIssuanceCommands.Add(ICreateItemIssuance c)
        {
            _innerCommands.Add((CreateItemIssuanceDto)c);
        }

        void ICreateItemIssuanceCommands.Remove(ICreateItemIssuance c)
        {
            _innerCommands.Remove((CreateItemIssuanceDto)c);
        }

        IEnumerator<ICreateItemIssuance> IEnumerable<ICreateItemIssuance>.GetEnumerator()
        {
            return _innerCommands.GetEnumerator();
        }

    }

}

